<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/********************************************************************
 ATTENTION!
 Load "constants.txt" to Macros (Resources -&gt; Define Macros -&gt; Load)
*********************************************************************/
/****************************************************
Tags:
[c=FFFFFF] - set color (hexadecimal, RRGGBB)

Keep in mind that a tag interpreted as words sepearator.
If you want place "[" as char instead of tag, just double it: "[[". Example:
[c=ff0000] - tag
[[c=ff0000] - text

Also for a new line you can use #, like:
text = "Line 1#Line 2#Line 3"
****************************************************/

text = "[c=0]Colored [c=ffffff]text [c=800080]supported [c=0]now. Set color using BBCode-like tag:
[[c=ff0000] - [c=ff0000]red[c=0] (HEX value in [c=800000]RR[c=8000]GG[c=80]BB[c=0] format)
(keep in mind that any tag interpreted as words sepearator)

[c=0]Playing [c=ff0000]computer[c=0] games is fun. But it is actually more fun to design your own computer games and let other people play them. In the past, creating computer games was not easy. Commercial computer games you buy nowadays typically take one or two years of development with teams of anywhere between 10 and 50 people. Budgets easily reach millions of dollars. And all these people are highly experienced: programmers, art designers, sound technicians, etc. 

But GameMaker has changed this. With [c=8000]GameMaker[c=0] you can create your own computer games quickly without the need to learn a programming language. Of course you should not expect to create your own Halo 4 or Virtua Tennis within a few weeks. But that is also not necessary. The joy of playing a game is not related to its complexity. Simpler games, like Tetris, Bejeweled, Space Invaders, etc. are a lot of fun to play and a lot easier to create. 

[c=00]GameMaker [c=10]offers [c=20]an [c=30]intuitive [c=40]and [c=50]easy [c=60]to [c=70]use [c=80]drag-and-drop [c=90]interface [c=a0]that [c=b0]allows [c=c0]you [c=d0]to [c=e0]create [c=f0]your [c=ff]own [c=0]games very quickly. You can import and create images, sprites (animated images) and sounds and use them. [c=0]GameMaker[c=0] is bundled with a considerable collection of such resources to get you started. You can easily define the objects in your game and indicate their behavior, and you can define appealing rooms (levels) in which the game takes place. And if you want full control there is actually an easy-to-use programming language built into GameMaker that gives you full control over what is happening in your game.
";

// Colored version
prepared_text = justify_parse_text_colored(text, fnt_Arial16);

// Old version (no colors, but faster)
//prepared_text = justify_create_words_list(text, fnt_Arial16);

show_debug_overlay(true);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw justified text

var offset = 30;
var offset_top = 50;

// Colored version
var h = justify_draw_text_colored(prepared_text, offset, room_width - offset, offset_top, fnt_Arial16, -1, 10, -1);

// Old version
//draw_set_colour(c_black);
//var h = justify_draw_text(prepared_text, offset, room_width - offset, offset_top, fnt_Arial16, -1, 10, -1);


//draw_set_colour(c_orange);
//draw_rectangle(offset, offset_top, room_width - offset, offset_top + h, true);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
