<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>menuMain</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-1001</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Old

//disable for steam version
//global.steamon=0
global.camera3D = true;
//Initialize Xbox Controls
global.xbox=0
scrInitXboxButtons()
if file_exists(working_directory+"\xbox") {
global.xbox=1
dllinit()
}

//Loads Volume.
global.mvol=1
global.svol=1
scrLoadVol()

//Used for general Commands
wait=0

//Colors for Alienware systems.
global.alienware=0
if file_exists(working_directory+"\alienware") {
global.alienware=1
scrAlienWareInit()
scrAlienWarePink()
} else global.alienware=0

//Loads Keys
global.controllertype=1
global.upkey='W'
global.downkey='S'
global.leftkey='A'
global.rightkey='D'
global.restartkey='R'
scrLoadKeys()

//Loads saved Masks
global.maskload=0

//Determinated variable used for switching colours
coldir=0

//Sets the default x,y cordenates
x=room_width/2
y=room_height/3-12
dir=random(10000)
repeats=1

//Introduces Globa Variable ''Shake''
global.shake=0

//Alt is an array wich contains the options in the main menu

//Start Game
alt[0]="START GAME"
scrLoadUnlocked()

//Will be ''Continue'' if the has not been completed: otherwise, level select
alt[1]="CONTINUE"
i=0 repeat (20) {if global.levels[i]=1 i+=1}
if i=20 alt[1]="CHAPTERS"
i=0

//Options Screen
alt[2]="OPTIONS"

//Exit game
alt[3]="EXIT GAME"


global.bonuslist=ds_list_create()
global.bonustime=0
global.newmasks=0

//Modifies this to be whats on screen once ''start game'' is selected
nextlevel=rmTutorial
level=0
select=0
rdir=0
global.paused=0
global.surf1=surface_create(room_width,room_height+64)
surface_set_target(global.surf1)
draw_clear_alpha(c_black,0)
surface_alpha()
surface_reset_target()
global.surf2=surface_create(640*3,480*3)
surface_set_target(global.surf2)
draw_clear_alpha(c_black,0)
surface_alpha()
surface_reset_target()
global.surf3=surface_create(640*3,480*3)
surface_set_target(global.surf3)
draw_clear_alpha(c_black,0)
surface_alpha()
surface_reset_target()
c_amount=0
fade=0
volume=1
presstart=0
pressup=0
pressdown=0
global.controller=0
pindex=0
alarm[0]=45
global.talked=1
global.i=0

//Generates ten palm trees.
repeat (10) {
my_id=instance_create(x,y,objPalmTree)
with my_id {repeat (global.i*45) amount*=1.01}
global.i+=1
}



global.surfaces=1
global.blood=1
if file_exists(working_directory+"\blood") global.blood=0
if file_exists(working_directory+"\surfaces") global.surfaces=0



global.surfacesprites=0
global.resetstory=0
global.comboflash=0
global.parttitle[0]="PART ONE."
global.parttitle[1]="PHONECALLS."
global.nextlevel=rmTutorial
global.sequence=rmSequence1
global.revisit=0
global.maskon=1
global.maskindex=0
quit=0
scrLoadAchievements()
scrCheckLetters()
scrCheckGuns()
scrCheckMasks()

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialise options.
//global.daytime = 0 // Checks to see if it's daytime; off by default.
//global.chroma = 0 // Chromatic aberration; off by default.
//global.togglebloom = 0 // Bloom; off by default.
global.canlockon = 1 //Target lock; on by default.
global.hud = 1 // Toggle HUD; on by default.
//global.inverted = 0 // Toggle inverted controls; off by default.
//global.screenfilter = 0 // Toggle screen filter; off by default.
global.drawFPS = 1 // Toggle drawing FPS in HUD; on by default.
global.deathshake = 0 // Default HUD warp on deaths.

// Gameplay variables.
global.done = 0; // Track level completion.
global.maxammo = 0 // Tracks maximum ammunition capacity of current weapon.
global.character = 0 // Check current character.
global.shake = 0 // Screenshake.

//Toggle Xbox controller.
//global.xbox = 0
presstart = 0
pressup = 0
pressdown = 0

flicker = 0
alarm[0] = 240 + random(240)

//Set default x and y coordinates in the room.
repeats = 1

//Set menu options.
alt[0] = "ENTER"
alt[1] = "EXIT"

// Load data.
load_data()

level = 0
select = 0
rdir = 0
c_amount = 0
fade = 0
volume = 1
coldir = 0
pindex = 0

// In-game variables.
quit = 0

global.CurrentSong=0//audio_play_sound(prufrock,0,1);
audio_sound_gain(global.CurrentSong, global.mvol, 0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Local variables for visual elements in menu.
dir = 0
wait = 0
// Set alpha controllers for fade opacity.
alpha1=1
alpha2=1

animate = 0
draw_bg = 0
alarm[0] = 24
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialise controller.
if gamepad_is_connected(0) {
    gamepad_set_axis_deadzone(0, 0.5);       // Set the "deadzone" for the axis
    gamepad_set_button_threshold(0, 0.1);    // Set the "threshold" for the triggers
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create particle system for explosions.
global.explosion = part_system_create()
global.smoke = part_type_create()

global.dust = part_system_create()
global.dustParticles = part_type_create()

//Creating Particle System
global.fireSmoke = part_system_create();
part_system_depth(global.fireSmoke, -996);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialise alternate gamemodes.
global.gibfest = 0
global.tgm = 0 // God mode.
global.rainbow = 0 // Rainbow bullets.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw background.
flicker = choose(0, 1)
alarm[0] = 120 + random(480)//1200 + random(1200)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create menu options.
if wait &gt; 0 wait -= 1

if keyboard_check_pressed(ord(global.upkey)) event_perform(ev_keypress, ord('W'))
if keyboard_check_pressed(ord(global.downkey)) event_perform(ev_keypress, ord('S'))
if keyboard_check_pressed(ord(global.rightkey)) event_perform(ev_keypress, ord('D'))
if keyboard_check_pressed(ord(global.leftkey)) event_perform(ev_keypress, ord('A'))

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move down.
if fade = 1 or wait &gt; 0 exit
wait = 3
repeats = 0
if level = 0 {
    if select &lt; 1 select += 1
    else select = 0
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move up.
if fade = 1 or wait &gt; 0 exit
wait = 3
repeats = 0
if level = 0 {
    if select &gt; 0 select -= 1 else select = 1
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Select an option.
//sound_ps(sndEnter)

// select 0 - scene select
if select = 0 {
    select = 0
    fade = 1
}

// select 1 - exit
if select = 1 {
    game_end()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Transitions.
if fade = 0 {
    if alpha2 &gt; 0 {
        draw_set_blend_mode(bm_add)
        if alpha1 &lt;= 0 alpha2 -= 0.2
        alpha3 = alpha2 * 2
        if alpha3 &gt; 1 alpha3 = 1
        draw_circle_colour(display_get_gui_width() / 2, display_get_gui_height() / 2, display_get_gui_width() * 0.74, merge_color(c_black, c_white, alpha2), merge_color(c_black, c_white, alpha3), 0)
        draw_set_blend_mode(bm_normal)
    }

    if alpha1 &gt; 0 {
        alpha1 -= 0.2
        draw_set_blend_mode(bm_subtract)
        alpha3 = alpha1 * 2
        if alpha3 &gt; 1 alpha3 = 1
        draw_rectangle_colour(0, 0, display_get_gui_width(), display_get_gui_height(), merge_color(c_black, c_white, alpha1), merge_color(c_black, c_white, alpha3), merge_color(c_black, c_white, alpha3), merge_color(c_black, c_white, alpha1), 0)
        draw_set_blend_mode(bm_normal)
    }
} else {
    draw_set_blend_mode(bm_add)
    if alpha2 &lt; 1 alpha2 += 0.2
    if alpha2 &gt;= 1 alpha2 = 1
    alpha3 = alpha2 * 2
    if alpha3 &gt; 1 alpha3 = 1
    draw_circle_colour(display_get_gui_width() / 2, display_get_gui_height() / 2, display_get_gui_width() * 0.74, merge_color(c_black, c_white, alpha2), merge_color(c_black, c_white, alpha3), 0)
    draw_set_blend_mode(bm_normal)

    if alpha2 &gt;= 1 {
        if alpha1 &lt; 1 {
            alpha1 += 0.2
            if alpha1 &gt; 1 alpha1 = 1
            if select = 0 or select = 1 or select = 2 audio_sound_gain(global.CurrentSong,1 - alpha1,0)
        } else {
            if select = 0 room = rmLevelSelect
            if select = 1 room = rmLevelSelect
            if select = 2 game_end()
            
        }
    }
    draw_set_blend_mode(bm_subtract)
    alpha3 = alpha1 * 2
    if alpha3 &gt; 1 alpha3 = 1
    if alpha1 &gt; 1 alpha1 = 1
    draw_rectangle_color(0, 0, display_get_gui_width(), display_get_gui_height(), merge_color(c_black, c_white, alpha1), merge_color(c_black, c_white, alpha3), merge_color(c_black, c_white, alpha3), merge_color(c_black, c_white, alpha1), 0)
    draw_set_blend_mode(bm_normal)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw background.
draw_sprite_ext(menuMain, 0, 0, 0, 1, 1, 0, c_white, 1)

switch (select) {
    case 0: draw_sprite_ext(menuMain, 2, 0, 0, 1, 1, 0, c_white, 1) break;
    case 1: draw_sprite_ext(menuMain, 3, 0, 0, 1, 1, 0, c_white, 1) break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move down.
if fade = 1 or wait &gt; 0 exit
wait = 3
repeats = 0
if level = 0 {
    if select &lt; 1 select += 1
    else select = 0
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move up.
if fade = 1 or wait &gt; 0 exit
wait = 3
repeats = 0
if level = 0 {
    if select &gt; 0 select -= 1 else select = 1
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Select an option.
//sound_ps(sndEnter)

// select 0 - scene select
if select = 0 {
    select = 0
    fade = 1
}

// select 1 - exit
if select = 1 {
    fade = 1
    //file_delete(working_directory + "\skip")
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
