<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprEBackBlunt</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>mskDeadBody</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=0
friction=0.1
image_yscale=-1+round(random(1))*2
global.blink=1
pool=1
bled=0
wait=500
life=100+random(60)
dead = 0
SteamIncStat("Kills",1)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = image_angle
repeat(4) {
    my_id = instance_create(x, y, objSplat)
    my_id.direction = dir - 45 + random(90)
    my_id.speed = 2 + random(2)
}
repeat(9) {
    my_id = instance_create(x, y, objSmudge)
    my_id.direction = dir - 45 + random(90)
    my_id.speed = 3 + random(3)
    my_id.image_angle = my_id.direction
}
repeat(3) {
    my_id = instance_create(x - 12 + random(24), y - 12 + random(24), objBigBlood)
}

if sprite_index = sprEFrontShotgun or sprite_index = sprEBackShotgun or sprite_index = sprEGangDeadShotgun {
    if image_index = 0 or image_index = 1 or image_index = 5 or image_index = 8 {
        repeat(5) {
            my_id = instance_create(x - 3 + random(6), y - 3 + random(6), objIntestine)
            my_id.direction = point_direction(x, y, my_id.x, my_id.y)
            my_id.speed = 1.5 + random(1.5)
        }
        repeat(5) {
            my_id = instance_create(x - 3 + random(6), y - 3 + random(6), objFleshChunk)
            my_id.direction = point_direction(x, y, my_id.x, my_id.y)
            my_id.speed = 1.5 + random(1.5)
        }
    }
}

if sprite_index = sprEGangDeadShotgun or sprite_index = sprEFrontShotgun or sprite_index = sprEBackShotgun {
    if image_index = 3 or image_index = 4 {
        i = 0
        repeat(7) {
            my_id = instance_create(x + lengthdir_x(20, image_angle), y + lengthdir_y(20, image_angle), objBrains)
            my_id.direction = point_direction(x, y, my_id.x, my_id.y) - 20 + random(40)
            my_id.speed = 2 + random(2)
        }
        repeat(3) {
            my_id = instance_create(x + lengthdir_x(20, image_angle), y + lengthdir_y(20, image_angle), objBrains2)
            my_id.direction = point_direction(x, y, my_id.x, my_id.y) - 10 + random(20)
            my_id.speed = 1.5 + random(1.5)
            my_id.image_index = random(3)
        }
        repeat(3) {
            my_id = instance_create(x + lengthdir_x(20, image_angle), y + lengthdir_y(20, image_angle), objHeadPiece)
            my_id.direction = point_direction(x, y, my_id.x, my_id.y) - 10 + random(20)
            my_id.speed = 1.5 + random(1.5)
            my_id.image_index = i
            i += 1
        }
    }
}

if sprite_index = sprEBackBlunt or sprite_index = sprEFrontBlunt or sprite_index = sprEGangDeadBlunt {
    if (image_index = 4 or image_index = 3 or image_index = 6 or image_index = 9) and bled = 0 {
        bled = 1
        repeat(7) {
            my_id = instance_create(x + lengthdir_x(20, image_angle), y + lengthdir_y(20, image_angle), objBrains)
            my_id.direction = point_direction(x, y, my_id.x, my_id.y) - 20 + random(40)
            my_id.speed = 2 + random(2)
        }
        repeat(3) {
            my_id = instance_create(x + lengthdir_x(20, image_angle), y + lengthdir_y(20, image_angle), objBrains2)
            my_id.direction = point_direction(x, y, my_id.x, my_id.y) - 10 + random(20)
            my_id.speed = 1.5 + random(1.5)
            my_id.image_index = random(3)
        }
        repeat(3) {
            my_id = instance_create(x + lengthdir_x(20, image_angle), y + lengthdir_y(20, image_angle), objHeadPiece)
            my_id.direction = point_direction(x, y, my_id.x, my_id.y) - 10 + random(20)
            my_id.speed = 1.5 + random(1.5)
            my_id.image_index = i
            i += 1
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if speed=0 and pool=0 {
    my_id = instance_create(x, y, objBloodPool)
    my_id.image_angle = random(360)
    pool=1
}

if scrBodyIsFlying(sprite_index) {
    if speed &lt; 2 {
        if image_index &lt; 3 image_index += 0.2
    } else {
        with objWindow solid = 0
        scrFlyThroughWindow()
    }
    if !place_free(x, y) speed = 0
    with objWindow solid = 1
} else {
    if !place_free(x, y) speed = 0
}



if speed = 0 and bled = 0 and scrCanBleed() {
    bled = 1
    scrBodyPieceBleed()
    my_id = instance_create(x, y, objBloodPool)
    my_id.image_angle = random(360)
    bled = 1
}

scrMoveSolidOn()
if !place_free(x, y) speed = 0
scrMoveSolidOff()

if sprite_index = sprEBackThroat or sprite_index = sprEGangDeadThroat {
    if bled = 0 {
        instance_create(x + lengthdir_x(19, dir), y + lengthdir_y(19, dir), objBloodPool)
        bled = 1
    } else {
        if round(random(25)) = 2 and life &gt; 0 {
            dir = image_angle + image_yscale * 12
            my_id = instance_create(x + lengthdir_x(19, dir), y + lengthdir_y(19, dir), objBloodSquirt)
            my_id.image_angle = random(360)
        }
        if life &gt; 0 life -= 1
        else {
            image_speed = 0
            if surface_exists(objSurfacer.surf) and global.surfaces = 1 addToSurface(objSurfacer.surf, 1)

        }
    }
    exit
}

if sprite_index = sprEBackScissor {
    image_speed = 0
    if life &gt; 0 {
        life -= 1
        if image_index &lt; 7.3 image_index += 0.15
        else image_index = 0
    } else {
        if image_index &lt; 13 image_index += 0.15
        else {
            if surface_exists(objSurfacer.surf) and global.surfaces = 1 addToSurface(objSurfacer.surf, 1)
        }
        dir = image_angle - image_yscale
        instance_create(x + lengthdir_x(19, dir), y + lengthdir_y(19, dir), objBloodPool)
    }
    exit
}

if sprite_index = sprEBackHeadJerk {
    image_speed = 0
    if life &gt; 0 {
        life -= 2
    } else {
        if image_index &lt; 6 image_index += 0.15
        else {
            if surface_exists(objSurfacer.surf) and global.surfaces = 1 addToSurface(objSurfacer.surf, 1)
        }
        dir = image_angle - image_yscale
        instance_create(x + lengthdir_x(19, dir), y + lengthdir_y(19, dir), objBloodPool)

        if round(random(12)) = 2 {
            my_id = instance_create(x + lengthdir_x(21, image_angle), y + lengthdir_y(21, image_angle), objBloodSquirt)
            my_id.image_angle = image_angle - 30 + random(60)
        }
    }
    exit
}

if sprite_index = sprEBackCracked {
    image_speed = 0
    if life &gt; 0 {
        life -= 1
        if image_index &lt; 3.3 image_index += 0.15
        else image_index = 0
        if round(random(30)) = 2 {
            my_id = instance_create(x + lengthdir_x(22, image_angle), y + lengthdir_y(22, image_angle), objBloodSquirt)
            my_id.image_angle = image_angle - 20 + random(40)
        }
    } else {
        if image_index &lt; 9 image_index += 0.15
        else {
            if surface_exists(objSurfacer.surf) and global.surfaces = 1 addToSurface(objSurfacer.surf, 1)
        }
    }
    exit
}

if sprite_index = sprEGangHalvedWakeUp {
    image_speed = 0
    if image_index &lt; 15 image_index += 0.35
    else {
        if surface_exists(objSurfacer.surf) and global.surfaces = 1 addToSurface(objSurfacer.surf, 1)
    }
    if bled = 0 and image_index &gt;= 19 {
        dir = image_angle - image_yscale
        instance_create(x + lengthdir_x(7, dir), y + lengthdir_y(7, dir), objBloodPool)
        bled = 1
        repeat(5) {
            my_id = instance_create(x + lengthdir_x(7, dir - 15), y + lengthdir_y(7, dir - 15), objBloodSquirt)
            my_id.image_angle = image_angle + 90 * image_yscale - 40 + random(80)
        }
    }
    exit
}

if sprite_index = sprEBackShotgunVomit {
    image_speed = 0
    if image_index &lt; 25 image_index += 0.15
    else {
        if surface_exists(objSurfacer.surf) and global.surfaces = 1 addToSurface(objSurfacer.surf, 1)
    }
    if bled = 0 and image_index &gt;= 19 {
        dir = image_angle - image_yscale
        instance_create(x + lengthdir_x(7, dir), y + lengthdir_y(7, dir), objBloodPool)
        bled = 1
        repeat(5) {
            my_id = instance_create(x + lengthdir_x(7, dir - 15), y + lengthdir_y(7, dir - 15), objBloodSquirt)
            my_id.image_angle = image_angle + 90 * image_yscale - 40 + random(80)
        }
    }
    exit
}

if sprite_index = sprEBackHeadshot {
    image_speed = 0
    if image_index &lt; 19 image_index += 0.2
    else {
        if surface_exists(objSurfacer.surf) and global.surfaces = 1 addToSurface(objSurfacer.surf, 1)
    }
    if bled = 0 and image_index &gt;= 13 {
        dir = image_angle
        instance_create(x + lengthdir_x(40, dir), y + lengthdir_y(40, dir), objBloodPool)
        bled = 1
        repeat(5) {
            my_id = instance_create(x + lengthdir_x(45, dir), y + lengthdir_y(45, dir), objBloodSquirt)
            my_id.image_angle = image_angle - 40 + random(80)
        }
    }
    exit
}

if sprite_index = sprEDeadDart {
    image_speed = 0
    if life &gt; 0 {
        life -= 1
        if image_index &lt; 7.3 image_index += 0.15
        else image_index = 0
    } else {
        if image_index &lt; 13 image_index += 0.15
        else {
            if surface_exists(objSurfacer.surf) and global.surfaces = 1 addToSurface(objSurfacer.surf, 1)
        }
    }
    exit
}

if sprite_index = sprEDeadBoiling {
    image_speed = 0
    if life &gt; 0 {
        life -= 1
        if life &gt; 60 and round(random(3)) = 2 instance_create(x + lengthdir_x(21, image_angle), y + lengthdir_y(21, image_angle), objSteam)
        if image_index &lt; 7.3 image_index += 0.15
        else image_index = 0
    } else {
        if image_index &lt; 13 image_index += 0.15
        else {
            if surface_exists(objSurfacer.surf) addToSurface(objSurfacer.surf, 1)
        }
    }
    exit
}

//BLOOD POOLS
if speed = 0 and bled = 0 {
    bled = 1
    length = random(24)
    if sprite_index = sprEBackBlunt or sprite_index = sprEFrontBlunt or sprite_index = sprPoliceBackBlunt or sprite_index = sprPoliceFrontBlunt or sprite_index = sprEGangDeadBlunt
    repeat(1 + random(2)) instance_create(x + lengthdir_x(24, image_angle) - 2 + random(4), y + lengthdir_y(24, image_angle) - 2 + random(4), objBloodPool)


    if sprite_index = sprEBackCut or sprite_index = sprEGangDeadCut repeat(1 + random(2))
    instance_create(x + lengthdir_x(6, image_angle) - 2 + random(4), y + lengthdir_y(6, image_angle) - 2 + random(4), objBloodPool)

    if sprite_index = sprEBackShotgun or sprite_index = sprPoliceBackShotgun or sprite_index = sprEFrontShotgun or sprite_index = sprPoliceFrontShotgun or sprite_index = sprEGangDeadShotgun
    repeat(2 + random(2)) instance_create(x + lengthdir_x(length, image_angle) - 2 + random(4), y + lengthdir_y(length, image_angle) - 2 + random(4), objBloodPool)

    if sprite_index = sprEBackMachinegun or sprite_index = sprWaiterDeadShotgun or sprite_index = sprWaiterDeadMachinegun or sprite_index = sprPoliceBackMachinegun or sprite_index = sprEFrontMachinegun or sprite_index = sprPoliceFrontMachinegun or sprite_index = sprEDeadNail or sprite_index = sprEGangDeadMachinegun
    repeat(2 + random(2)) instance_create(x + lengthdir_x(length, image_angle) - 2 + random(4), y + lengthdir_y(length, image_angle) - 2 + random(4), objBloodPool)

    if sprite_index = sprDogDeadCut or sprite_index = sprDogDeadShot or sprite_index = sprDogDeadBlunt
    repeat(1 + random(2)) instance_create(x + lengthdir_x(2, image_angle) - 2 + random(4), y + lengthdir_y(2, image_angle), objBloodPool)


    if sprite_index = sprEBackKicked {
        repeat(2 + random(3)) {
            dir = image_angle
            my_id = instance_create(x, y, objBloodSquirt)
            my_id.image_angle = random(360)
            repeat(3) instance_create(x + lengthdir_x(17, image_angle), y + lengthdir_y(17, image_angle), objBloodPool)
        }
    }



    if sprite_index = sprEBackBashed {
        repeat(2 + random(3)) {
            dir = image_angle - 2 + random(4)
            my_id = instance_create(x + lengthdir_x(24, dir), y + lengthdir_y(24, dir), objBloodSquirt)
            my_id.image_angle = dir - 100 + random(200)
            repeat(2) instance_create(x + lengthdir_x(17, image_angle), y + lengthdir_y(17, image_angle), objBloodPool)
        }
    }


    if sprite_index = sprEBackSlashed {
        scrBodyPartBleed()
    }


    if sprite_index = sprEBackBlunt {
        if image_index = 6 or image_angle = 13 {
            repeat(2 + random(3)) {
                dir = image_angle - 2 + random(4)
                my_id = instance_create(x + lengthdir_x(24, dir), y + lengthdir_y(24, dir), objBloodSquirt)
                my_id.image_angle = dir - 35 + random(70)
            }
        }

        if image_index = 14 {
            repeat(2 + random(3)) {
                dir = image_angle + (2 + random(4)) * image_yscale
                my_id = instance_create(x + lengthdir_x(24, dir), y + lengthdir_y(24, dir), objBloodSquirt)
                my_id.image_angle = dir - random(50)
            }
        }

        if image_index = 12 {
            repeat(2 + random(3)) {
                dir = image_angle - 2 + random(4)
                my_id = instance_create(x + lengthdir_x(24, dir), y + lengthdir_y(24, dir), objBloodSquirt)
                my_id.image_angle = dir - 70 + random(140)
            }
        }
    }

    if sprite_index = sprDogDeadShot {
        if image_index = 3 {
            repeat(2 + random(3)) {
                dir = image_angle - 2 + random(4)
                my_id = instance_create(x + lengthdir_x(8, dir), y + lengthdir_y(8, dir), objBloodSquirt)
                my_id.image_angle = dir - 30 + random(60)
                repeat(3) instance_create(x + lengthdir_x(17, image_angle), y + lengthdir_y(17, image_angle), objBloodPool)
            }
        }
    }


    if sprite_index = sprEBackShotgun {
        if image_index = 2 {
            repeat(2 + random(3)) {
                dir = image_angle + image_yscale * 12
                my_id = instance_create(x + lengthdir_x(15, dir), y + lengthdir_y(15, dir), objBloodSquirt)
                my_id.image_angle = image_angle + 90 * image_yscale - 20 + random(60)
            }
        }

        if image_index = 3 {
            repeat(2 + random(3)) {
                dir = image_angle - 2 + random(4)
                my_id = instance_create(x + lengthdir_x(19, dir), y + lengthdir_y(19, dir), objBloodSquirt)
                my_id.image_angle = dir - 30 + random(60)
            }
        }
    }

    if sprite_index = sprEBackCut {
        if image_index = 2 {
            repeat(2 + random(3)) {
                dir = image_angle + image_yscale * 12
                my_id = instance_create(x + lengthdir_x(19, dir), y + lengthdir_y(19, dir), objBloodSquirt)
                my_id.image_angle = random(360)
            }
        }
    }

}

if sprite_index = sprEFrontShotgun or sprite_index = sprEBackShotgun or sprite_index = sprEGangDeadShotgun or sprite_index = sprPoliceFrontShotgun or sprite_index = sprPoliceBackShotgun {
    if image_index = 1 or image_index = 5 or image_index = 8 and bled = 0 {
        repeat(5) {
            my_id = instance_create(x - 3 + random(6), y - 3 + random(6), objIntestine)
            my_id.direction = point_direction(x, y, my_id.x, my_id.y)
            my_id.speed = 1.5 + random(1.5)
        }
        repeat(5) {
                        my_id = instance_create(x - 3 + random(6), y - 3 + random(6), objIntestine)
                        my_id.direction = point_direction(x, y, my_id.x, my_id.y)
                        my_id.speed = 1.5 + random(1.5)
                    }
        bled = 1
    }
}

if sprite_index = sprEFrontShotgun or sprite_index = sprEBackShotgun or sprite_index = sprEGangDeadShotgun or sprite_index = sprPoliceFrontShotgun or sprite_index = sprPoliceBackShotgun {
    if image_index = 4 and bled = 0 {

        bled = 1
        repeat(7) {
            my_id = instance_create(x + lengthdir_x(20, image_angle), y + lengthdir_y(20, image_angle), objBrains)
            my_id.direction = point_direction(x, y, my_id.x, my_id.y) - 20 + random(40)
            my_id.speed = 2 + random(2)
        }
        repeat(3) {
            my_id = instance_create(x + lengthdir_x(20, image_angle), y + lengthdir_y(20, image_angle), objBrains2)
            my_id.direction = point_direction(x, y, my_id.x, my_id.y) - 10 + random(20)
            my_id.speed = 1.5 + random(1.5)
            my_id.image_index = random(3)
        }
    }
}

if sprite_index = sprEBackBlunt or sprite_index = sprEFrontBlunt or sprite_index = sprEGangDeadBlunt {
    if (image_index = 4 or image_index = 3 or image_index = 6 or image_index = 9) and bled = 0 {
        bled = 1
        repeat(7) {
            my_id = instance_create(x + lengthdir_x(20, image_angle), y + lengthdir_y(20, image_angle), objBrains)
            my_id.direction = point_direction(x, y, my_id.x, my_id.y) - 20 + random(40)
            my_id.speed = 2 + random(2)
        }
        repeat(3) {
            my_id = instance_create(x + lengthdir_x(20, image_angle), y + lengthdir_y(20, image_angle), objBrains2)
            my_id.direction = point_direction(x, y, my_id.x, my_id.y) - 10 + random(20)
            my_id.speed = 1.5 + random(1.5)
            my_id.image_index = random(3)
        }
    }
}

if wait &gt; 0 wait -= 1
else {
    if bled = 1 {
        if !place_meeting(x, y, objBloodPool) {
            if surface_exists(objSurfacer.surf) and global.surfaces = 1 addToSurface(objSurfacer.surf, 1)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index = sprEGangDieThrowingKnife or sprite_index = sprEDieThrowingKnife {
    my_id = instance_create(x, y, objDeadBody)
    if sprite_index = sprEGangDieThrowingKnife my_id.sprite_index = sprEGangDieThrowingKnife else my_id.sprite_index = sprEDieThrowingKnife
    my_id.image_index = 15
    my_id.direction = direction
    my_id.speed = 0.5
    my_id.image_angle = my_id.direction
    instance_destroy()
}
/*if sprite_index = sprEGangDieThrowingKnife and dead = 0 {
    if image_index &lt; 15 image_index += 0.25 else image_index = 15
    speed = 0.5
    image_angle = direction
    dead = 1
    exit
}

if sprite_index = sprEDieThrowingKnife and dead = 0 {
    if image_index &lt; 15 image_index += 0.25 else image_index = 15
    speed = 0.5
    image_angle = direction
    dead = 1
    exit
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_sprite_ext(sprite_index,image_index,x+1,y+1,image_xscale,image_yscale,image_angle,c_black,0.5)
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,image_blend,image_alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
