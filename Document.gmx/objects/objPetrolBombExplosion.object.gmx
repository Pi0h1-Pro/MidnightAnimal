<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBottleExplode</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=0
index=0
image_angle=random(360)
sound_ps(sndExplode)
image_xscale = 0.5 + random(1)
image_yscale = image_xscale
damage = 10 + random(10)

repeat (30) {
    my_id=instance_create(x,y,objFlameParticle)
    my_id.direction=random(360)
    my_id.speed=2+random(3)
    my_id.friction=0.15
}

smoke_splash = instance_create(x, y, objSmokePuffExplosion)

//repeat(2 + random(2)) flames = instance_create(x - sprite_width / 2 + random(sprite_width), y - sprite_height / 2 + random(sprite_height), objTinyFire)

repeat(2) {
    fire = instance_create(x, y, objFireMedium)
    fire.image_xscale = (image_xscale + 1) * random_range(0.75, 1.2)
    fire.image_yscale = fire.image_xscale
}

ground = instance_create(x, y, objExplosionGround) 
ground.image_xscale = image_xscale + 1
ground.image_yscale = ground.image_xscale

///Particles for explosion.
part_type_shape(global.smoke, pt_shape_smoke)
part_type_size(global.smoke, 0.1, 1, 0, 0)
part_type_life(global.smoke, 20, 30)
part_type_color_mix(global.smoke, c_gray, c_dkgray)
part_type_alpha2(global.smoke, 0.2, 0)
part_type_direction(global.smoke, 0, 360, 0, 0)
part_type_speed(global.smoke, 4, 10, 0, 0)
part_particles_create(global.explosion, x, y, global.smoke, 200 + random(200))

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if image_xscale &gt; 0.5 image_xscale -= 0.05 else image_xscale = 0.5
image_yscale = image_xscale
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Status effects.
with other {
    if burning = 0 {
        affected = true
        burning = 1
        create_damage_general(random(3), global.c_fire, "BURNING!", 1, x + choose(-random(24), random(24)), y - 5)
    }
}
/*global.my_id = id
with other {
    /*if other.object_index = objEnemyFat
    or other.object_index = objEnemyFatStatic
    or other.object_index = objEnemyFatLSD
    or other.object_index = objEnemyFatGun {
        my_id = instance_create(x, y, objBurningBody)
        my_id.sprite_index = sprEFatBurned
        my_id.image_angle = direction
    } else if other.object_index = objDogPatrol {
        my_id = instance_create(x, y, objBurningBody)
        my_id.sprite_index = sprDogDeadBurn
        my_id.image_angle = direction
    } else {
        my_id = instance_create(x, y, choose(objEnemyBurn, objEnemyBurnExtreme))
        my_id.direction = direction
    } 
    burning = 1
    hp -= global.my_id.damage
    create_damage_projectile(random(3), global.c_fire, 1, x + choose(-random(24), random(24)), y - 5)
}


global.myscore += 100
global.combo += 1
global.combotime = 240
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_set_blend_mode(bm_add)
if image_index &lt; 8 image_index += 0.3
if image_index &lt; 8 {
    draw_sprite_ext(sprBottleExplode, image_index, x, y, image_xscale, image_yscale, image_angle, merge_color(c_white, c_yellow, (image_index * 0.1) * (0.8 + random(0.2))), 1)
    if image_index &gt;= 2 draw_sprite_ext(sprBottleExplodeFlame, image_index - 2, x, y, image_xscale, image_yscale, image_angle, c_orange, 1)
    if image_index &gt;= 1 draw_sprite_ext(sprBottleExplodeFlame, image_index - 1, x, y, image_xscale, image_yscale, image_angle, c_yellow, 1)
    draw_sprite_ext(sprBottleExplodeFlame, image_index, x, y, image_xscale, image_yscale, image_angle, c_white, 1)
}
else {
    //draw_sprite_ext(sprBottleExplode, 8, x, y, image_xscale + 0.15, image_yscale + 0.15, image_angle, merge_color(c_dkgray, c_black, 0.5 + random(0.5)), 1)
    //draw_sprite_ext(sprBottleExplode, 8, x, y, image_xscale + 0.05 + random(0.05), image_yscale + 0.05 + random(0.05), image_angle, merge_color(c_red, c_orange, random(1)), 0.5 + random(0.5))
    draw_sprite_ext(sprBottleExplode, 8, x, y, image_xscale, image_yscale, image_angle, merge_color(c_yellow, c_orange, random(0.35)), 1 - random(0.2))
    index += 0.25
    draw_sprite_ext(sprBottleFlames, index - 1, x, y, image_xscale, image_yscale, image_angle - 5, c_white, 0.6 + lengthdir_x(0.4, index * 10))
    draw_sprite_ext(sprBottleFlames, index - 3, x, y, image_xscale, image_yscale, image_angle + 5, c_white, 0.6 + lengthdir_x(0.4, index * 10 + 90))
    draw_sprite_ext(sprBottleFlames, index, x, y, image_xscale, image_yscale, image_angle, c_white, 0.6 + lengthdir_x(0.4, index * 10 + 180))
}
draw_reset()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
