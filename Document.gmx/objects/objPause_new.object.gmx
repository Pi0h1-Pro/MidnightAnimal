<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surf1 = surface_create(room_width, room_height)
surf2 = surface_create(room_width, room_height)
baseheight = room_height * 0.2
top = room_height * 0.6
i = 0
lines = 10
repeat(lines) {
    liney[i] = random(room_height)
    i += 1
}
state = 0
symbol = 4

rewline = 0

rewind = choose(0, 1)

wait = 120
symbol = 4
alpha = 1

surf3 = surface_create(room_width, room_height)
surface_set_target(surf3)
draw_sprite_ext(global.sprite, 0, 0, 0, 1 / 3, 1 / 3, 0, c_white, 1)
surface_reset_target()

i = 0
dists = 3
firsty = random(room_height * 0.3)
repeat(dists) {
    disty[i] = firsty
    distheight[i] = 10 + random(10)
    firsty += random(room_height * 0.3)
    i += 1
}

factor = 0

on = 1
sound_loop(sndStaticVHS)

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Continue timer.
seconds = global.seconds
minutes = global.minutes
hours = global.hours 
timer = global.timer

count_up = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_copy(surf1, 0, 0, surf2)
surface_set_target(surf2)
scrDrawPause()
surface_reset_target()

if on = 1 {
    if factor &lt; 1 factor += 0.1
}
if on = 0 {
    if factor &gt; 0 factor -= 0.1
    else {
        if sprite_exists(global.sprite) sprite_delete(global.sprite)
        sound_stop(sndUnPause)
        sound_stop(sndStaticVHS)
        sound_play(sndPlay)
        bgm_Unpause(global.currentsong)
        room_goto(global.lastroom)
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Timer.
//If it's allowed to start.
if (count_up == true)
{
    global.seconds += 1/room_speed; //increment seconds by 1 ever real-time second.
}

//If seconds hits around 60.
if (seconds &lt; 60) &amp;&amp; (seconds &gt; 59.9)
{
    seconds = 0;
    minutes += 1;//increment minutes by 1.
}

//If minutes hits 60.
if (minutes == 60)
{
    minutes = 0;
    hours += 1;//increment hours by 1.
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(surf1)
surface_free(surf2)
surface_free(surf3)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Timer.
global.seconds = seconds; //This will grab the value of obj_countup_controller's seconds and store it globally.
global.minutes = minutes; //This will grab the value of obj_countup_controller's minutes and store it globally.
global.hours = hours; //This will grab the value of obj_countup_controller's hours and store it globally.

//Now that the variables are global, we can grab them in the next room.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.timer  = 0
{
    count_up = true;//start timer
    global.timer = 1
}
else
{
    count_up = false;//stop timer
    global.timer = 0
}
//if state=1 state=0 else state=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw pause menu.
draw_surface_ext(surf2, 0, 0, 1, 1, 0, make_color_hsv(random(255), random(10), 255 - random(10)), 1)
//draw_surface_ext(surf1,0,0,1,1,0,c_white,0.5)

draw_set_blend_mode(bm_subtract)
draw_sprite_ext(sprVCRSymbol2, symbol, 34, 24, 1, 0.5, 0, make_color_hsv(random(255), random(20), 155 - random(5)), random(0.5))
draw_set_blend_mode(bm_normal)
draw_sprite_ext(sprVCRSymbol, symbol, 26, 24, 0.8, 0.5, 0, make_color_hsv(random(255), random(20), 255), 1)
draw_sprite_ext(sprHDSymbol, 0, 34, 208, 0.8, 0.7, 0, make_color_hsv(random(255), random(20), 255), 1)
//draw_sprite_ext(sprHDSymbol, 1, 60, 208, 0.5, 0.7, 0, make_color_hsv(random(255), random(20), 255), 1)
draw_sprite_ext(sprHDSymbol, 2, 34, 221, 0.65, 0.65, 0, make_color_hsv(random(255), random(20), 255), 1)
draw_sprite_ext(sprHDSymbol, 3, 34, 236, 0.85, 0.85, 0, make_color_hsv(random(255), random(20), 255), 1)

draw_sprite_ext(sprTracker, 0, room_width/2, 26, 0.9, 0.6, 0, make_color_hsv(random(255), random(20), 255), 1)

draw_sprite_ext(sprBattery, 0, room_width/2 + 170, 28, 0.7, 0.7, 0, make_color_hsv(random(255), random(20), 255), 1)

draw_sprite_ext(sprFocalReticle, 0, room_width/2, room_height/2, 0.7, 0.7, 0, make_color_hsv(random(255), random(20), 255), 1)

//Setting up the display
draw_set_font(fntTimer);
draw_set_color(c_red);

if (seconds &lt; 10) &amp;&amp; (minutes &lt; 10)
{
    draw_text(78, 24, string(hours) + ":0" + string(minutes) + ":0" + string(seconds));
}
else if (seconds &gt;= 10) &amp;&amp; (minutes &gt;= 10)
{
    draw_text(78, 24, string(hours) + ":" + string(minutes) + ":" + string(seconds));
}
else if (seconds &lt; 10) &amp;&amp; (minutes &gt;= 10)
{
    draw_text(78, 24, string(hours) + ":" + string(minutes) + ":0" + string(seconds));
}
else if (seconds &gt;= 10) &amp;&amp; (minutes &lt; 10)
{
    draw_text(78, 24, string(hours) + ":0" + string(minutes) + ":" + string(seconds));
}

//Draw scanlines and noise.
draw_set_blend_mode(bm_subtract)
my_y = random(32)
my_x = random(32)
draw_sprite_tiled(sprNoise, 0, -my_x, -my_y)

draw_set_blend_mode(bm_subtract)
draw_circle_color(view_wview[0] / 2, view_hview[0] / 2, 370 + random(34), c_black, merge_color(c_gray, merge_color(c_aqua, c_navy, 0.1 + random(0.4)), 0.15 + random(0.15)), 0)
draw_set_blend_mode(bm_normal)
    
    
if alpha &gt; 0 {
    draw_set_blend_mode(bm_add)
    draw_set_color(merge_color(c_black, c_white, alpha))
    draw_rectangle(0, 0, room_width, room_height, 0)
    draw_set_blend_mode(bm_normal)
    if alpha &gt; 0 alpha -= 0.1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if on=0 exit
on=0
sound_play(sndUnPause)
symbol=3
with objPauseMenu instance_destroy()

if timer  = 0
{
    count_up = true;//start timer
    timer = 1
}
else
{
    count_up = false;//stop timer
    timer = 0
}
//if state=1 state=0 else state=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
