<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>objFurniture</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialise general variables.

// Life of the object.
life = 3 + random(5)
type = 1

// Number of fragments to spawn.
fragments = irandom_range(10,16)

// Flash white if hit.
flash = true

// Colour of flash.
color = c_red

// Shake the object if hit. Set higher for greater shake, set to 0 for none.
shake = 1.5

alpha = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Destroy wall with sledgehammer.
if scrMovingPlayerExists() {
    if place_meeting(x - lengthdir_x(12, objPlayer.dir), y - lengthdir_y(12, objPlayer.dir), objPlayer) {
        if scrIsSwinging(objPlayer.sprite_index) {//and scrCurrentWeaponExt(objPlayer.sprite_index) = 19  
            if place_meeting(x, y, objEnemy) exit

            life = 0
            
            // Begin the process of destruction.
            alpha = 1

            repeat(4 + random(6)) {
                my_id = instance_create(x + lengthdir_x(14, direction), y + lengthdir_y(14, direction), objDebris)
                my_id.direction = objPlayer.direction - 140 - random(80)
                my_id.speed = random(4)
            }

            repeat(16) {
                    my_id = instance_create(x + lengthdir_x(14, direction), y + lengthdir_y(14, direction), objTinyShard)
                    my_id.direction = random(360)
                    my_id.speed = 1 + random(1)
                }
                
            if random(10) = 2 {
                            my_id = instance_create(x, y, objWeaponSpawn)
                            my_id.image_index = choose(0, 1, 6, 7, 9, 10, 11, 12, 26, 27, 41)
                            my_id.image_angle = random(360)
                            my_id.direction = random(360)
                            my_id.speed = 1 + random(1)
                            my_id.friction = 0.1
                            my_id.ammo = scrGetSpecificAmmo(my_id.image_index)
                        }
            
            /// Destruction process.
            if life &lt;= 0 {

                switch (type) {

                    // No effect.
                    case 0:
                        instance_destroy()
                        break

                        // Wood shattering.
                    case 1:
                        var sw, sh;
                        sw = (sprite_width / 2) / image_xscale
                        sh = (sprite_height / 2) / image_yscale
                        sound_ps(choose(sndWoodenBreak1, sndWoodenBreak2, sndWoodenBreak3))
                        //part_particles_create(global.dust, x, y, global.dustParticles, 200 + random(200))
                        repeat(fragments) {
                            with(instance_create(x, y, objBreakableFragment)) {
                                sprite_index = other.sprite_index
                                image_index = other.image_index
                                image_xscale = other.image_xscale
                                image_yscale = other.image_yscale
                                image_angle = irandom(360)
                                direction = irandom(360)
                                speed = 2 + random(2)
                                friction = 0.15
                                left = irandom(sw)
                                top = irandom(sh)
                                width = irandom(sw)
                                height = irandom(sh)
                            }
                        }
                        with other instance_destroy()
                        instance_destroy()
                        break
                }

            }
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Take damage, and shatter.

// Depreciate life.
life -= 0.5

global.my_id = id
bullets = 0

// Impact effects.
with objEBullet {
    global.my_id.bullets += 1
    if place_meeting(x, y, objEnemy) exit
    sound_ps(choose(sndBulletImpact, sndBulletImpact1, sndBulletImpact2, sndBulletImpact3, sndBulletImpact4, sndBulletImpact5))
    scrHearSomething(x + random(10), y + random(10))
    my_id = instance_create(x, y, objMuzzleSmoke)
    my_id.image_angle = direction
    my_id.direction = direction - 180
    
    repeat(2 + random(4)) {
        my_id = instance_create(x + lengthdir_x(14, direction), y + lengthdir_y(14, direction), objDebris)
        my_id.direction = direction - 140 - random(80)
        my_id.speed = random(4)
    }
    
    repeat(6) {
        my_id = instance_create(x + lengthdir_x(14, direction), y + lengthdir_y(14, direction), objTinyShard)
        my_id.direction = direction - 140 - random(80)
        my_id.speed = 1 + random(1)
    }
    
    instance_destroy()
    if random(10) = 2 {
        my_id = instance_create(x, y, objWeaponSpawn)
        my_id.image_index = choose(0, 1, 6, 7, 9, 10, 11, 12, 26, 27, 41)
        my_id.image_angle = random(360)
        my_id.direction = random(360)
        my_id.speed = 1 + random(1)
        my_id.friction = 0.1
        my_id.ammo = scrGetSpecificAmmo(my_id.image_index)
    }
}

// Begin the process of destruction.
alpha = 1

/// Destruction process.
if life &lt;= 0 or bullets &gt; 4 {

    switch (type) {

        // No effect.
        case 0:
            instance_destroy()
            break;

        // Wood shattering.
        case 1:
            var sw, sh;
            sw = (sprite_width / 2) / image_xscale
            sh = (sprite_height / 2) / image_yscale
            sound_ps(choose(sndWoodenBreak1, sndWoodenBreak2, sndWoodenBreak3))
            //part_particles_create(global.dust, x, y, global.dustParticles, 200 + random(200))
            repeat(fragments) {
                with(instance_create(x, y, objBreakableFragment)) {
                    sprite_index = other.sprite_index
                    image_index = other.image_index
                    image_xscale = other.image_xscale
                    image_yscale = other.image_yscale
                    image_angle = irandom(360)
                    direction = irandom(360)
                    speed = 2 + random(2)
                    friction = 0.15
                    left = irandom(sw)
                    top = irandom(sh)
                    width = irandom(sw)
                    height = irandom(sh)
                }
            }
            with other instance_destroy()
            instance_destroy()
            break;
    }

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Take damage, and shatter.

// Depreciate life.
life -= 0.5

global.my_id = id
bullets = 0

// Impact effects.
with objBullet {
    global.my_id.bullets += 1
    if place_meeting(x, y, objEnemy) exit
    sound_ps(choose(sndBulletImpact, sndBulletImpact1, sndBulletImpact2, sndBulletImpact3, sndBulletImpact4, sndBulletImpact5))
    scrHearSomething(x + random(10), y + random(10))
    my_id = instance_create(x, y, objMuzzleSmoke)
    my_id.image_angle = direction
    my_id.direction = direction - 180
    
    repeat(2 + random(4)) {
        my_id = instance_create(x + lengthdir_x(14, direction), y + lengthdir_y(14, direction), objDebris)
        my_id.direction = direction - 140 - random(80)
        my_id.speed = random(4)
    }
    
    repeat(6) {
        my_id = instance_create(x + lengthdir_x(14, direction), y + lengthdir_y(14, direction), objTinyShard)
        my_id.direction = direction - 140 - random(80)
        my_id.speed = 1 + random(1)
    }
    
    instance_destroy()
    if random(10) = 2 {
        my_id = instance_create(x, y, objWeaponSpawn)
        my_id.image_index = choose(0, 1, 6, 7, 9, 10, 11, 12, 26, 27, 41)
        my_id.image_angle = random(360)
        my_id.direction = random(360)
        my_id.speed = 1 + random(1)
        my_id.friction = 0.1
        my_id.ammo = scrGetSpecificAmmo(my_id.image_index)
    }
}

// Begin the process of destruction.
alpha = 1

/// Destruction process.
if life &lt;= 0 or bullets &gt; 4 {

    switch (type) {

        // No effect.
        case 0:
            instance_destroy()
            break;

        // Wood shattering.
        case 1:
            var sw, sh;
            sw = (sprite_width / 2) / image_xscale
            sh = (sprite_height / 2) / image_yscale
            sound_ps(choose(sndWoodenBreak1, sndWoodenBreak2, sndWoodenBreak3))
            //part_particles_create(global.dust, x, y, global.dustParticles, 200 + random(200))
            repeat(fragments) {
                with(instance_create(x, y, objBreakableFragment)) {
                    sprite_index = other.sprite_index
                    image_index = other.image_index
                    image_xscale = other.image_xscale
                    image_yscale = other.image_yscale
                    image_angle = irandom(360)
                    direction = irandom(360)
                    speed = 2 + random(2)
                    friction = 0.15
                    left = irandom(sw)
                    top = irandom(sh)
                    width = irandom(sw)
                    height = irandom(sh)
                }
            }
            with other instance_destroy()
            instance_destroy()
            break;
    }

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw object, and effects.

// If not yet destroyed, draw self...
if alpha = 0 draw_self() else if alpha &gt; 0 {

    // ...otherwise, begin drawing destruction effects.
    
    // Set variables for shaking the object.
    var xs, ys;
    xs = x + irandom_range(-shake,shake)
    ys = y + irandom_range(-shake,shake)
    
    // Draw object shaking.
    draw_sprite_ext(sprite_index,image_index,xs,ys,image_xscale,image_yscale,image_angle,-1,1)
    
    // If flash is enabled, draw the object flashing as well. 
    // The colour of the flash can be adjusted in the Create event.
    if flash {
        //d3d_set_fog(true, c_white, 0, 0)
        //draw_sprite_ext(sprite_index, image_index, xs,ys, image_xscale, left, angle, image_blend, alpha)
        //d3d_set_fog(false, c_white, 0, 0)
        draw_sprite_ext(sprite_index,image_index,xs,ys,image_xscale,image_yscale,image_angle,color,alpha)
    }
    // Depreciate effect life.
    alpha -= 0.05
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
