<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCursor1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>objExporter</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrInitNoise()
scrAddCollisionCorners()
if global.xbox = 1 scrInitXboxButtons()
lastsprite = -1234
conversationwait = 1
global.enemy = -124123
global.loaded = 0
global.dir = 0
global.locked = 0
if room = rmSequence1 
or room = rmSequence2 
or room = rmSequence3 
or room = rmSequence4 
or room = rmSequence5 
or room = rmSequence6 
or room = rmSequence7 
or room = rmSequence8 
or room = rmSequence9 
or room = rmSequence10 
or room = rmSequence11 
or room = rmSequence12 
or room = rmSequence14 
or room = rmHospitalTopFloor 
or room = rmMCBar 
or room = rmMCSequence2 
or room = rmMCSequence3 or room = rmMCSequence4 {
    scrShowDate(room) start = 1
} else start = 0

if room = rmSequence13Downstairs start = 1
levelshow = 240
if room = rmMansionMainHall save = 1
else save = 0
lastbrus = 0
brus = 0
alpha = 1
coldir = 0
amount = 0
fade = 0
my_y = 0
restart = 0
update = 0
dir = 0
nextroom = room_next(room)
newsong = 0
song = -1
//blackx = 0
bamount = 0
coldir = 0
amount = 0
fade = 0
my_y = 0
restart = 0
update = 0
ammoy = -32
next = 0
showfinished = 0
stopsong = 0
image_speed = 0.4
action = 0
wait = 0    
phonex = 0
blackx = 15
line1x = 0
line2x = 0
nextroom = room_next(room)
newsong = 0
song = -1
index = 0
show_date = 0
sprite = sprPhone
width = display_get_width()
height = display_get_height()
global.mousex = (display_mouse_get_x() - width * 0.5) * (view_wview[0] / width)
global.mousey = (display_mouse_get_y() - height * 0.5) * (view_hview[0] / height)
vlastx = view_xview[0]
vlasty = view_yview[0]
global.enemy = -1234
leveltitle = ""
levelshow = 240
gridon = 0
uzisnd = 0
if instance_exists(objMaskMenu) {
    if global.sequence = rmSequence1 leveltitle = "02:21#Brickell Metro Station"
    if global.sequence = rmSequence2 leveltitle = "East 7th St"
    if global.sequence = rmSequence3 leveltitle = "23:37#North West 184th St"
    if global.sequence = rmSequence4 leveltitle = "South West 53rd Place"
    if global.sequence = rmSequence5 leveltitle = "North West 24th St"
    if global.sequence = rmSequence6 leveltitle = "South West 104th St"
    if global.sequence = rmSequence7 leveltitle = "North West 151st Place"
    if global.sequence = rmSequence8 leveltitle = "South East 122nd St"
    if global.sequence = rmSequence9 leveltitle = "North East 165th "
    if global.sequence = rmSequence10 leveltitle = "North East 24th St"
    if global.sequence = rmSequence11 leveltitle = "East 7th St"
    if global.sequence = rmSequence12 leveltitle = "South East 24th St"
    if global.sequence = rmSequence13 leveltitle = "West 25th St"
    if global.sequence = rmSequence14 leveltitle = "South 86th St"
}
if instance_exists(objPlayerBiker) {
        if room = rmNoodleShop leveltitle = "North East 56th St"
        if room = rmArcadeDownstairs leveltitle = "South West 107th Place"
        if room = rmPhoneHomEntranceBiker leveltitle = "North West 342nd St"
        if room = rmJanitors leveltitle = "North 87th Place"
    }
    //
if instance_exists(objEnemy) scrInitPathFinding()
scorex = 160
ammox = -160
combox = -160
sprite = -1234
kills = 0
killamount = 0
drawrestart = 0
text_y = 0
scratch = 0
whitealpha = 0

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Timer.
/*
- Countup Timer -
Created by SlasherX
*/

//First we set the following to 0.
seconds = 0;
minutes = 0;
hours = 0;

//We make sure the timer doesn't start immediately.
count_up = false;//set to true if you want the timer to start when obj_countup_controller is created.

timer = 0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CRT.

//blur radius (blurs the whole screen)
blur = 0.5;

//rgbshift effect
time = 0;         
amp = 4;
scrInitRGBShift()

//rolling bar effect
//bar_h = 120; //height of the bar
//bar_endh = 40;  //bar end gradient height            
//create_bar()
//bar_time = 0; //time variable for position    

//shine effect
//shine_h = 120; //shine height
//shine_endh = 10 //shine end gradient height
//create_shine();

//scan lines effect
//create_lines();

//noise effect
xs = 1; //variable for x-scale of the noise effect
ys = 1; //variable for y-scale of the noise effect
//scrCreateNoise()


surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.paused = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.xbox = 1 {
    if checkbutton(0, getid(5)) {
        if presstart = 0 {
            presstart = 1
            scrXboxEffectorStart()
        }
    } else presstart = 0

    if checkbutton(0, getid(6)) {
        if pressback = 0 {
            pressback = 1
            scrXboxEffectorPause()
        }
    } else pressback = 0
}

if save = 1 {
    save = 0
    test = objPlayer.persistent
    objPlayer.persistent = 0
    global.loaded = 1
    game_save(working_directory + "\tempsave.sav")
    global.loaded = 0
    objPlayer.persistent = test
}

if uzisnd = 1 {
    uzisnd = 0
    sound_play(sndUzi)
}

vlastx = view_xview[0]
vlasty = view_yview[0]

scrScreenShake()

if keyboard_check_pressed(ord(global.restartkey)) event_perform(ev_keypress, ord('R'))
SteamRunCallbacks()
if global.maskload = 1 {
    scrLoadMask()
    global.maskload = 0
    with objPlayer scrGetMaskPowers()
}

if global.loaded = 1 {
    scrLoadAchievements()
    if room = rmSwatUpstairs {
        sound_stop(sndPolice)
        if file_exists(working_directory + "\restartmusic") {
            scrPlaySong(working_directory + "\Warzone.mp3")
            scrSongVolume(1)
            file_delete(working_directory + "\restartmusic")
            scrSaveFloor() //scrCheckpoint()
        }
    }
    scrLoadBonusList()
    with objSurfacer {
        scrSurfaceTiles()
    }
    with objWeapon {
        if object_index = objSpecificWeapon nothing = 1
        else {
            instance_create(x, y, objWeapon)
            instance_destroy()
        }
    }
    leveltitle = ""
    levelshow = 120
    global.loaded = 0
    scrSaveTiles()
    if global.maskindex = 9 objPlayer.energie = 1
    if global.maskindex = 21 objPlayer.energie = 2
}

scrCheckMissionComplete()
if global.controller = 1 {
    if checkbutton(0, getid(5)) fade = 1
}

if fade = 0 {
    if amount &lt; 180 {
        amount += 5
    }
}

if fade = 1 {
    if amount &gt; 0 {
        amount -= 10
        if restart = 1 or newsong = 1 or(room = rmSwatUpstairs and instance_exists(objSwat) and instance_exists(objPlayerDead)) {
            scrSongVolume(amount * (1 / 180))
        }
    } else {
        fade = 0
        if restart = 1 {
            if file_exists(working_directory + "\restartmusic") 
            file_delete(working_directory + "\restartmusic") 
            scrStopSong(1) 
            scrSongVolume(0) 
            scrMusicClose() 
            //sga_Free()
            scrClearBlood() 
            game_restart() 
            //scrPlaySong(working_directory+"\Main.mp3"); room=rmMenu
        } else {
            if next = 1 {
                if file_exists(working_directory + "\restartmusic") file_delete(working_directory + "\restartmusic")
                if newsong = 1 {
                    scrStopSong(1) 
                    scrSongVolume(0) 
                    scrPlaySong(song);
                }
                room = nextroom
            } else {
                if room = rmSwatUpstairs and file_exists(working_directory + "\restartmusic") {
                    scrStopSong(1) 
                    bgm_Unload(global.currentsong)
                }
                //fade = 0 amount = 180 
                scrSaveBlood() 
                scrResetActiveSurfaces() 
                game_load(working_directory + "\tempsave.sav")
            }
        }
    }
}

if instance_exists(objLSD) {

    with objPelletPlant {
        instance_create(x, y, objPalmTreeLSD)
        instance_destroy()
    }

    with objPalmDay {
        instance_create(x, y, objPalmTreeLSD)
        instance_destroy()
    }

    with objPalmNight {
        instance_create(x, y, objPalmTreeLSD)
        instance_destroy()
    }

    with objMagazines {
        instance_create(x, y, objBones)
        instance_destroy()
    }

    with objTree {
        instance_create(x, y, objBigTreeLSD)
        instance_destroy()
    }

    with objBigTreeDay {
        instance_create(x, y, objBigTreeLSD)
        instance_destroy()
    }

    with objBigTreeNight {
        instance_create(x, y, objBigTreeLSD)
        instance_destroy()
    }

    with objBushCorner {
        instance_create(x, y, objLSDBushCorner)
        instance_destroy()
    }

    with objBushSmall {
        instance_create(x, y, objLSDBushSmall)
        instance_destroy()
    }

    with objShadowV {
        instance_destroy()
    }

    with objShadowH {
        instance_destroy()
    }

    with objPartySmoke {
        instance_destroy()
    }

    with objEnemyFat {
        instance_create(x, y, objEnemyFatLSD)
        instance_destroy()
    }

    with objEnemyFatStatic {
        instance_create(x, y, objEnemyFatLSD)
        instance_destroy()
    }

    with objStatueAngel {
        my_id = instance_create(x, y, objAngelLSD)
        my_id.image_angle = image_angle
        instance_destroy()
    }

    with objEBullet {
        sprite_index = sprBulletLSD
    }
    
    with objClubDarkness {
        instance_destroy()
    }
    
    with objDiscoLights {
        instance_destroy()
    }

}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Timer.
//If it's allowed to start.
if (count_up == true)
{
    seconds += 1/room_speed; //increment seconds by 1 ever real-time second.
}

//If seconds hits around 60.
if (seconds &lt; 60) &amp;&amp; (seconds &gt; 59.9)
{
    seconds = 0;
    minutes += 1;//increment minutes by 1.
}

//If minutes hits 60.
if (minutes == 60)
{
    minutes = 0;
    hours += 1;//increment hours by 1.
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CRT.

if amp &gt; 5 {
    amp -= 5
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Timer.
global.seconds = seconds; //This will grab the value of obj_countup_controller's seconds and store it globally.
global.minutes = minutes; //This will grab the value of obj_countup_controller's minutes and store it globally.
global.hours = hours; //This will grab the value of obj_countup_controller's hours and store it globally.
global.count_up = count_up;

//Now that the variables are global, we can grab them in the next room.
/*sga_DestroyEmitter(a)
sga_DestroyEmitter(b)
sga_DestroyEmitter(c)
sga_DestroyEmitter(d)


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(objMaskMenu) {
    if global.maskindex = 14 or global.maskindex = 8 bamount = 1
}

//global._lsys_surface
alarm[0] = 1

scrSaveBonusList()
i = 0
room_set_persistent(room, true)
room_persistent = true
//scrInitPathFinding()
//if global.paused = 0 {
//    scrInitPathFinding() if !instance_exists(objMaskMenu) scrCheckpoint()
//} else global.paused = 0

//if !instance_exists(objMaskMenu) scrCheckpoint()
if !instance_exists(objTimeControl) instance_create(x, y, objTimeControl)

if !instance_exists(objBackgroundColor) instance_create(x, y, objBackgroundColor)

if global.maskindex = 4 and global.done = 0 {
    if !instance_exists(objControl) instance_create(x, y, objControl)
}

if global.maskindex = 3 and global.done = 0 {
    if !instance_exists(objPlayerLight) and scrMovingPlayerExists() instance_create(objPlayer.x, objPlayer.y, objPlayerLight)
    if !instance_exists(objLightSystem) instance_create(x, y, objLightSystem)
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>file_delete("tempsave.sav")
scrSaveFloor()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if gridon = 1 {
    draw_set_alpha(0.25) mp_grid_draw(global.grid) draw_set_alpha(1)
}

if !instance_exists(objMaskMenu) and !instance_exists(objPhoneConversation) {
    if timer = 0 {
        count_up = true;//start timer
        timer = 1
    } else {
        count_up = false;//stop timer
        timer = 0
    }
    global.time += 1
    
}
if instance_exists(objDizzy) exit
if blackx &lt; 15 blackx += 1

if instance_exists(objPlayer) {
    width = display_get_width()
    height = display_get_height()
    factor = 1
    if global.xbox = 1 {
        if trigger_pressed(1) {
            global.mousex = objPlayer.x + rightthumb_x(0) * 0.009
            global.mousey = objPlayer.y - rightthumb_y(0) * 0.006
        } else {
            if scrMovingPlayerExists() //objPlayer.object_index = objPlayerMouse or objPlayer.object_index = objPlayerMouseHouse or objPlayer.object_index = objPlayerBiker or objPlayer.object_index = objPlayerBikerHouse 
            {
                if objPlayer.object_index = objPlayerMouse or objPlayer.object_index = objPlayerMouseHouse or objPlayer.object_index = objPlayerBiker or objPlayer.object_index = objPlayerBikerHouse {
                    global.mousex = objPlayer.x + lengthdir_x(64, objPlayer.dir)
                    global.mousey = objPlayer.y + lengthdir_y(64, objPlayer.dir)
                } else {
                    global.mousex = objPlayer.x global.mousey = objPlayer.y
                }
                /*global.mousex = objPlayer.x + ((display_mouse_get_x() - width * 0.5) * (view_wview[0] / width)) * factor //objPlayer.x + lengthdir_x(64, objPlayer.dir)
                        global.mousey = objPlayer.y + ((display_mouse_get_y() - height * 0.5) * (view_hview[0] / height)) * factor //objPlayer.y + lengthdir_y(64, objPlayer.dir)

                        if global.mousex &lt; view_xview[0] global.mousex = view_xview[0]
                        if global.mousey &lt; view_yview[0] global.mousey = view_yview[0]
                        if global.mousex &gt; view_xview[0] + view_wview[0] global.mousex = view_xview[0] + view_wview[0]
                        if global.mousey &gt; view_yview[0] + view_hview[0] global.mousey = view_yview[0] + view_hview[0]
                        x = global.mousex
                        y = global.mousey


                        draw_sprite_ext(sprite_index, image_index, global.mousex + 1, global.mousey + 1, 1, 1, -view_angle[0], c_black, 0.5)
                        draw_set_blend_mode(bm_add)
                        draw_sprite_ext(sprite_index, image_index, global.mousex, global.mousey, 1, 1, -view_angle[0], c_white, 1)

                    } else {
                        display_mouse_set(width * 0.5 + lengthdir_x(96, objPlayer.dir), height * 0.5 + lengthdir_y(96, objPlayer.dir)) //global.mousex = objPlayer.x global.mousey = objPlayer.y
                    }*/
            }
        }
    } else {
        if scrMovingPlayerExists() {
            if objPlayer.active = 1 {
                if keyboard_check_direct(vk_shift) factor = 2
                global.mousex = objPlayer.x + ((display_mouse_get_x() - width * 0.5) * (view_wview[0] / width)) * factor
                global.mousey = objPlayer.y + ((display_mouse_get_y() - height * 0.5) * (view_hview[0] / height)) * factor
                
                //Limit mouse to screen.
                if global.mousex &lt; view_xview[0] global.mousex = view_xview[0]
                if global.mousey &lt; view_yview[0] global.mousey = view_yview[0]
                if global.mousex &gt; view_xview[0] + view_wview[0] global.mousex = view_xview[0] + view_wview[0]
                if global.mousey &gt; view_yview[0] + view_hview[0] global.mousey = view_yview[0] + view_hview[0]
                x = global.mousex
                y = global.mousey

                draw_sprite_ext(sprite_index, image_index, global.mousex + 1, global.mousey + 1, 1, 1, -view_angle[0], c_black, 0.5)
                draw_set_blend_mode(bm_add)
                draw_sprite_ext(sprite_index, image_index, global.mousex, global.mousey, 1, 1, -view_angle[0], c_white, 1)
            } else {
                display_mouse_set(width * 0.5 + lengthdir_x(96, objPlayer.dir), height * 0.5 + lengthdir_y(96, objPlayer.dir))
            }
        }
    }
    x = global.mousex
    y = global.mousey
    if instance_exists(global.enemy) {
        global.mousex = global.enemy.x
        global.mousey = global.enemy.y
    } else global.enemy = -1234
}
global.dir += 1

test = 1

if !instance_exists(objPlayer) test = 0

if instance_exists(objPhoneConversation) or instance_exists(objFinalDialogue) or instance_exists(objFinalDialogue2) test = 0

if test = 1 {
    draw_sprite_ext(sprite_index, image_index, global.mousex + 1, global.mousey + 1, 1, 1, -view_angle[0], c_black, 0.5)
    draw_set_blend_mode(bm_add)
    draw_sprite_ext(sprite_index, image_index, global.mousex, global.mousey, 1, 1, -view_angle[0], c_white, 1)
    draw_set_blend_mode(bm_normal)
}

with objAnsweringMachine {
    if active = 1 and sprite_index = sprDrawersH24Phone draw_sprite(sprArrow, image_index * 2, x, y - 16 + lengthdir_x(3, global.dir * 6))
}

with objPhone {
    if called = 1 and answered = 0 draw_sprite_ext(sprArrow, 0, x, y - 12 + lengthdir_x(3, dir * 2), 1, 1, 0, c_white, 1)
}

with objBox {
    if global.phone = 1 draw_sprite(sprArrow, global.dir, x, y - 16 + lengthdir_x(3, global.dir * 6))
}

d3d_set_projection_ortho(0, 0, view_wview[0], view_hview[0], 0)

if room = rmSequence12b {
    if !instance_exists(objPlayer) {
        dir += 8
        color2 = merge_color(merge_color(c_aqua, c_fuchsia, 0.5 + lengthdir_x(0.5, dir * 2.32)), c_white, 0.5 + lengthdir_x(0.5, dir * 3))
        color1 = merge_color(c_maroon, merge_color(c_aqua, c_fuchsia, 0.5 - lengthdir_x(0.5, dir * 2.32)), 0.75 + lengthdir_x(0.25, dir * 3))
        draw_set_halign(fa_center)
        draw_set_valign(fa_center)
        ammostring = "R TO RESTART!"
        if ammoy &lt; 40 ammoy += 1
        else ammoy = 40
        if update = 0 draw_set_font(fntSubtitles)
        else draw_set_font(fntScoreUpdate)
        draw_set_color(c_black)
        draw_set_font(fntSubtitles)
        draw_rectangle(0, view_hview[0] - ammoy - 11, 18 + string_width(ammostring) + 6, view_hview[0] - ammoy + 11, 0)
        draw_set_font(fntSubtitles)
        draw_set_color(color1)
        draw_set_font(fntSubtitles)
        if ammoy &gt; -32 draw_text_transformed(18 + string_width(ammostring) * 0.5 + lengthdir_x(1, dir), view_hview[0] - ammoy + lengthdir_y(1, dir), ammostring, 1, 1, lengthdir_x(2, dir))
        draw_set_color(color2)
        if ammoy &gt; -32 draw_text_transformed(18 + string_width(ammostring) * 0.5 + lengthdir_x(1, dir - 180), view_hview[0] - ammoy + lengthdir_y(1, dir - 180), ammostring, 1, 1, lengthdir_x(2, dir - 10))
    }
}
scrDrawConversation()
scrDrawNoise()

if instance_exists(objPlayerMouse) {
    view_xview[0] = vlastx
    view_yview[0] = vlasty
}

if room = rmHotelSuite {
    with objWindowV {
        if sprite_index = sprWindowSill nothing = 1
        else {
            if x = 480 and y = 256 {
                draw_sprite_ext(sprArrow, 0, x - 12 + lengthdir_x(3, objBackgroundColor.dir * 32), y + 16, 1, 1, 90, c_white, 1)
            }
        }
    }
}

//Draw aiming reticle.
//draw_sprite_ext(sprite_index, image_index, global.mousex + 1, global.mousey + 1, 1, 1, -view_angle[0], c_black, 0.5)
//draw_set_blend_mode(bm_add)
//draw_sprite_ext(sprite_index, image_index, global.mousex, global.mousey, 1, 1, -view_angle[0], c_white, 1)
//draw_set_blend_mode(bm_normal)

with objDiscoLights {
    d3d_set_projection_ortho(0, 0, view_wview[0], view_hview[0], 0)
    draw_set_blend_mode(bm_subtract)
    draw_surface(surf, 0, 0)
}

//Draw level title.
if leveltitle = ""
nothing = 1
else {
    if levelshow &gt; 0 levelshow -= 1
    else leveltitle = ""
    draw_set_font(fntDate)
    draw_set_halign(fa_center)
    draw_set_valign(fa_top)
    if levelshow &gt; 180 draw_set_alpha((240 - levelshow) * (1 / 60))
    if levelshow &lt; 60 draw_set_alpha(levelshow * (1 / 60))
    draw_set_color(c_black)
    draw_text(view_wview[0] / 2 + 1, view_hview[0] * 0.7 + 1, leveltitle)
    draw_set_color(c_white)
    draw_text(view_wview[0] / 2, view_hview[0] * 0.7, leveltitle)
    draw_set_alpha(1)
}

with objGoToCar {
    if ammoy &lt; 36 ammoy += 4
    else ammoy = 40
    draw_set_color(c_black)
    draw_set_font(fntSubtitles)
    ammostring = "Leave the area"
    draw_set_halign(fa_center)
    draw_set_valign(fa_center)
    draw_rectangle(0, view_hview[0] - ammoy - 11, 18 + string_width(ammostring) + 6, view_hview[0] - ammoy + 11, 0)
    draw_set_color(merge_color(c_teal, c_red, 0.5 + lengthdir_x(0.5, dir)))
    draw_text_transformed(18 + string_width(ammostring) * 0.5 + lengthdir_x(1, dir), view_hview[0] - ammoy + lengthdir_y(1, dir), ammostring, 1, 1, lengthdir_x(2, dir * 1.34))
    draw_set_color(merge_color(c_white, c_yellow, 0.2 + lengthdir_x(0.2, dir)))
    dir += 10
    draw_text_transformed(18 + string_width(ammostring) * 0.5 + lengthdir_x(1, dir - 180), view_hview[0] - ammoy + lengthdir_y(1, dir - 180), ammostring, 1, 1, lengthdir_x(2, dir * 1.34 - 10))
}

draw_set_blend_mode(bm_normal)
if instance_number(objLSD) + instance_number(objStorm) = 0 {
    scrScoreDrawStory()
    if global.hud = 1 scrDrawAmmo()
    scrStoryDrawAmmo()

    //Draw the mask menu; otherwise, display date.
    if instance_exists(objMaskMenu) scrDrawMaskMenu()
    else {
        if leveltitle = ""
        nothing = 1
        else {
            if levelshow &gt; 0 levelshow -= 1
            else leveltitle = ""
            draw_set_font(fntDate)
            draw_set_halign(fa_center)
            draw_set_valign(fa_top)
            if levelshow &gt; 180 draw_set_alpha((240 - levelshow) * (1 / 60))
            if levelshow &lt; 60 draw_set_alpha(levelshow * (1 / 60))
            draw_set_color(c_black)
            draw_text(view_wview[0] / 2 + 1, view_hview[0] * 0.7 + 1, leveltitle)
            draw_set_color(c_white)
            draw_text(view_wview[0] / 2, view_hview[0] * 0.7, leveltitle)
            draw_set_alpha(1)
        }
    }

    //Fade screens.
    if fade = 0 {
        if amount &lt; 180 {
            color1 = merge_color(c_black, merge_color(c_aqua, c_white, 0.5 + lengthdir_x(0.5, amount)), 0.5 + lengthdir_x(0.5, amount))
            if amount &gt; 90 color2 = merge_color(c_black, merge_color(c_fuchsia, c_white, abs(lengthdir_y(1, amount))), abs(lengthdir_y(1, amount)))
            else color2 = c_white
            draw_set_blend_mode(bm_subtract)
            draw_rectangle_color(-10, -10, view_wview[0] + 10, view_hview[0] + 10, color1, color2, color2, color1, 0)
            draw_set_blend_mode(bm_normal)
        }
    }

    if fade = 1 {
        color1 = merge_color(c_black, merge_color(c_aqua, c_white, 0.5 + lengthdir_x(0.5, amount)), 0.5 + lengthdir_x(0.5, amount))
        if amount &gt; 90 color2 = merge_color(c_black, merge_color(c_fuchsia, c_white, abs(lengthdir_y(1, amount))), abs(lengthdir_y(1, amount)))
        else color2 = c_white
        draw_set_blend_mode(bm_subtract)
        draw_rectangle_color(-10, -10, view_wview[0] + 10, view_hview[0] + 10, color2, color1, color1, color2, 0)
        draw_set_blend_mode(bm_normal)
    }
    coldir += 1

    scrDrawPlayer()

    //Draw flash.
    if whitealpha &gt; 0 {
        draw_set_blend_mode(bm_add)
        draw_set_color(merge_color(c_black, c_white, whitealpha))
        draw_rectangle(-10, -10, view_wview[0] + 10, view_hview[0] + 10, 0)
        draw_set_blend_mode(bm_normal)
        whitealpha -= 0.1
    }

    //Draw environmental effects.
    if instance_exists(objSunlight) scrDrawSun()
    //if instance_exists(objBGMidnight) scrDrawNight()

    //Draw distortion effects.
    if global.maskindex = 8 and global.maskon = 1 {
        scrBerserk()
    }

    if global.maskindex = 1 and global.maskon = 1 scrInvertColours()

    if global.maskindex = 14 and global.maskon = 1 {
        draw_set_blend_mode(bm_subtract)
        draw_circle_color(view_wview[0] / 2, view_hview[0] / 2, 240 + random(24), merge_color(c_black, merge_color(c_white, c_aqua, 0.6 + lengthdir_x(0.4, global.dir * 4)), bamount), merge_color(c_black, c_white, bamount), 0)
        draw_circle_color(view_wview[0] / 2, view_hview[0] / 2, 240 + random(24), merge_color(c_black, merge_color(c_white, c_black, 0.6 + lengthdir_x(0.4, global.dir * 4)), bamount), merge_color(c_black, c_white, bamount), 0)
        draw_set_blend_mode(bm_normal)
        if bamount &lt; 1 bamount += 0.05
    }

    draw_set_blend_mode(bm_subtract)
    //draw_circle_color(view_wview[0] / 2, view_hview[0] / 2, 240 + random(24), c_black, merge_color(c_navy, c_aqua, 0.25 + random(0.25)), 0)
    draw_set_blend_mode(bm_normal)
    /*
            if blackx &gt; 0 {
                draw_set_color(c_black)
                draw_rectangle(0, 0, view_wview[0], blackx, 0)
                draw_rectangle(0, view_hview[0], view_wview[0], view_hview[0] - blackx * 1.5, 0)
                blackx -= 3
            }
        */
    //Draw restart.
    drawrestart = 0 {
        if instance_exists(objMaskMenu) drawrestart = 0
        if instance_exists(objPlayerDead) {
            if text_y &lt; 64 text_y += 4
            draw_set_font(fntRestart)
            draw_set_halign(fa_center)
            draw_set_valign(fa_center)
            draw_set_color(merge_color(c_fuchsia, c_purple, 0.5 + lengthdir_x(0.5, coldir * 2.71)))
            draw_text_transformed(64 + string_width("PRESS R TO RESTART") * 0.5, view_hview[0] + 31 - text_y + lengthdir_x(1, coldir * 3), "PRESS R TO RESTART", 1, 1, lengthdir_x(2, coldir * 4 - 20))
            draw_set_color(merge_color(c_white, c_aqua, 0.5 + lengthdir_x(0.5, coldir * 3.21)))
            draw_text_transformed(64 + string_width("PRESS R TO RESTART") * 0.5, view_hview[0] + 30 - text_y + lengthdir_x(1, coldir * 3), "PRESS R TO RESTART", 1, 1, lengthdir_x(2, coldir * 4))
        }
    }

}

if show_date = 1 {
    if room = rmSequence1 text = "April 3rd, 1989#Miami - Florida"
    if room = rmSequence2 text = "April 8th, 1989#Miami - Florida"
    if room = rmSequence3 text = "April 16th, 1989#Miami - Florida"
    if room = rmSequence4 text = "April 25th, 1989#Miami - Florida"
    if room = rmSequence5 text = "May 5th, 1989#Miami - Florida"
    if room = rmSequence6 text = "May 11th, 1989#Miami - Florida"
    if room = rmSequence7 text = "May 13th, 1989#Miami - Florida"
    if room = rmSequence8 text = "May 23rd, 1989#Miami - Florida"
    i = 0
    draw_set_alpha(0.5 + lengthdir_x(0.5, amount))
    draw_set_color(c_gray)
    draw_set_font(fntDate)
    draw_set_halign(fa_center)
    draw_set_valign(fa_center)
    draw_text(view_wview[0] / 2 + 1, view_hview[0] / 2 + 1, text)
    draw_set_color(c_white)
    draw_text(view_wview[0] / 2, view_hview[0] / 2, text)
    draw_set_alpha(1)
    //d3d_set_projection_ortho(0,0,view_wview[0],view_hview[0],0)
}

if brus &gt; 0 {
    brus -= 1
    if lastbrus = 0 sound_play(sndNoise)
    lastbrus = brus
    if brus = 0 sound_stop(sndNoise)
    draw_sprite_tiled(sprNoise, global.dir * 0.5, 0, 0)
    draw_set_color(c_black)
    draw_rectangle(0, 0, view_wview[0], blackx, 0)
    draw_rectangle(0, view_hview[0], view_wview[0], view_hview[0] - blackx * 1.5, 0)
}

//Draw scanlines and noise.
draw_set_blend_mode(bm_subtract)
my_y = random(32)
my_x = random(32)
draw_sprite_tiled(sprScanlines, 0, 0, my_y)
draw_sprite_tiled(sprNoise, 0, -my_x, -my_y)

draw_set_blend_mode(bm_subtract)
draw_circle_color(view_wview[0] / 2, view_hview[0] / 2, 370 + random(34), c_black, merge_color(c_gray, merge_color(c_aqua, c_navy, 0.1 + random(0.4)), 0.15 + random(0.15)), 0)
draw_set_blend_mode(bm_normal)
////

//Draw FPS and VRAM usage.
draw_set_color(c_white);
draw_set_font(fntDetails);
//draw_text(view_wview[0] - 40, 16, "FPS: " + string(fps));



//Draw scratch.

if scratch &gt; 0 {
    draw_set_blend_mode(bm_add)
    repeat(scratch) {
        draw_sprite_ext(sprSmallWhiteDistortion, random(4), random(view_wview[0]), random(view_hview[0]), 1, 1, 0, merge_color(c_black, c_gray, random(1)), 1)
    }
    repeat(30) {
        draw_sprite_ext(sprMediumWhiteDistortion, random(4), random(view_wview[0]), view_hview[0] + 20 - random(6) - abs(scratch) * 0.5, 1 + random(2), 1, 0, merge_color(c_black, c_gray, random(1)), 1)
    }
    repeat(30) {
        draw_sprite_ext(sprMediumWhiteDistortion, random(4), random(view_wview[0]), view_hview[0] + 40 - random(6) - abs(scratch) * 0.6, 1 + random(2), 1, 0, merge_color(c_black, c_gray, random(1)), 1)
    }
    my_y = random(32)
    my_x = random(32)
    draw_sprite_tiled_ext(sprNoise, 0, -my_x, -my_y, 1, 1, merge_color(c_black, c_white, scratch * 0.01), 1)
    my_y = random(32)
    my_x = random(32)
    draw_sprite_tiled_ext(sprNoise, 0, -my_x, -my_y, 1, 1, merge_color(c_black, c_white, scratch * 0.01), 1)
    draw_set_blend_mode(bm_normal)
    scratch -= 2
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CRT.

//RGB shift
        time += 0.15; //updates time variable
    //draws the effect
/*   scrDrawRGBShift(0, amplitude(time/1.7+9)*amp, 
                         0, amplitude(time/1.5+2)*amp, 
                         0, amplitude(time/1.2+3)*amp)


//noise
/*        if(choose(0,1)) //switches the noise by x or y direction
        xs *= -1; 
        else
        ys *= -1; 
    draw_surface_ext(noise_surf, -view_wview*(xs-1)/2, -view_hview*(ys-1)/2, xs, ys, 0, -1, 0.3);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.xbox = 1 exit
if instance_exists(objMaskMenu) exit
if instance_exists(objPlayer) nothing = 1
else {
    scrSaveAchievements() fade = 1 next = 0
}

if sound_isplaying(sndBigExplosion) {
    sound_stop(sndBigExplosion)
    scrSongVolume(1)
}

if instance_exists(objPlayerDead) {
    if file_exists("tempsave.sav") {
        scrResetActiveSurfaces() scrLoadFloor()
    } else game_restart()
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>exit gridon=!gridon</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.xbox = 1 exit
if instance_exists(objMaskMenu) or instance_exists(objPhoneConversation) exit
if fade = 0 and amount = 180 {
    if instance_exists(objPlayer) {
        if objPlayer.persistent = 1 objPlayer.persistent = 0
    }
    sound_stop(sndPlay)
    sound_play(sndPause)
    bgm_Pause(global.currentsong)
    global.lastroom = room
    room_persistent = 1
    screen_save(working_directory + "\pause.bmp")
    global.sprite = sprite_add(working_directory + "\pause.bmp", 0, 0, 0, 0, 0)
    file_delete(working_directory + "\pause.bmp")
    room = rmPause
    scrSaveBlood()
    scratch = 100
}

if timer  = 0
{
    count_up = true;//start timer
    timer = 1
}
else
{
    count_up = false;//stop timer
    timer = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
