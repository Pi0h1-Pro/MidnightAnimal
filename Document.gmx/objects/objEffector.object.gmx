<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCursor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initalise variables.
// Create shader effects.
//lens_define(0.1, 0, 1, 4, 0.07)
//lens_enable()

init_music()

// Create visual noise.
scrInitNoise()

// Get style ranks for combos.
scrGetStyleRank()

width = display_get_width()
height = display_get_height()

// Determine the mouse position in the room.
global.mousex = (display_mouse_get_x() - width * 0.5) * (view_wview[0] / width)
global.mousey = (display_mouse_get_y() - height * 0.5) * (view_hview[0] / height)

lastsprite = -1234
cursor = -1234
global.enemy = -124123
global.loaded = 0
global.dir = 0
global.active = 1
global.dist_detection = 320

// HUD effects.
screenzoom=1
chroma=0
global.screeneffect = 0
global.blur = 0

healthflash = 0
hudflash = 0
showinfo = 1
cursoralpha = 0.5
lastbrus = 0
brus = 0
laststatic = 0
staticfx = 0

// Flashbang effects.
flashalpha = 0

// Screen flash.
whitealpha = 0
blackalpha = 0

// Letterboxinig.
blackx = 5
letterbox = false

// Elements.
text_interact = ""
alpha = 1
coldir = 0
amount = 0
fade = 0
my_y = 0
restart = 0
update = 0
dir = 0
nextroom = room_next(room)
blink=0
halpha = 0
bamount = 0
coldir = 0
amount = 0
fade = 0
my_y = 0
restart = 0
update = 0
ammoy = -32
next = 0
action = 0
wait = 0    
nextroom = room_next(room)
index = 0
teleport_angle = random(360)
scorex=160
shield_alpha = 0
hitalpha = 0
shelded = false

// Stabilise the view. 
vlastx = view_xview[0]
vlasty = view_yview[0]
gridon = 0

// If there are enemies in the room, initialise pathfinding.
scrInitPathFinding()

// Visuals.
coldir = 0
scorex = 160
ammox = -160
gunx = -160
combox = 160
sprite = -1234
kills = 0
killamount = 0
drawrestart = 0
text_y = 0
scratch = 0
arrow_index = 0

// Debug
inputstring = "";
input = 0;
returnvar=0;
DrawGrid=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Controller input.

// Start to pause.
    if gamepad_button_check_pressed(0, gp_start) {
        if fade = 0 and amount = 180 {
            if scrMovingPlayerExists() {
                if objPlayer.persistent = 1 objPlayer.persistent = 0
            }
            sound_ps(sndPause)
            scratch = 100
            instance_create(x,y,objPause)
        }
    }
    
if instance_exists(objDrawRestart) {
    if gamepad_button_check_pressed(0, gp_face1) {
        with(objDrawRestart) fade=1
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player states.

if instance_exists(objSunset) global.lightQuantity = 0.4 else global.lightQuantity = 0.7
glr_set_ambient_daytime(global.lightQuantity)

//Stabilise view.
vlastx = view_xview[0]
vlasty = view_yview[0]

//Control screenshake.
scrScreenShake()

// Level completion.
scrLevelClear()

if scrMovingPlayerExists() {
    if pierretteIsShielded(objPlayer.sprite_index) shielded = true else shielded = false
}

if fade = 0 {
    if amount &lt; 180 {
        amount += 5
    }
}

if fade = 1 {
    if amount &gt; 0 {
        amount -= 10

    } else {
        fade = 0
        if restart = 1 {
            game_restart() 
        } else {
            if next = 1 {
                if instance_exists(objPlayerCar) if objPlayerCar.enter=1 audio_sound_gain(global.CurrentSong,amount * (1 / 180),0)
                room = nextroom
            } else {
                game_load(working_directory + "\tempsave.sav");
            }
        }
    }
}

// Debug
if input inputstring=keyboard_string;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Various timers.
/*if keyboard_check(vk_up)
    {
    if global.vol &lt; 1 global.vol += 0.001
    audio_master_gain(global.vol);
    }
 if keyboard_check(vk_down)
    {
    if global.vol &gt; 0 global.vol -= 0.001
    audio_master_gain(global.vol);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*part_system_destroy(global.smoke)
part_system_destroy(global.fireSmoke)
part_system_destroy(global.explosion)
part_system_destroy(global.dust)
part_system_destroy(global.dustParticles)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>objEffector</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialise HUD elements.
if !instance_exists(efDesaturation) instance_create(0, 0, efDesaturation)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*part_system_destroy(global.smoke)
part_system_destroy(global.fireSmoke)
part_system_destroy(global.explosion)
part_system_destroy(global.dust)
part_system_destroy(global.dustParticles)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Radial blur.
if scrMovingPlayerExists() gfxRadialBlur(application_surface,0,2,objPlayer.x,objPlayer.y,global.blur);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// HUD effects.

screenzoom=1.33+global.screeneffect/200
chroma=0+global.screeneffect/0.6

draw_rectangle_colour(0, 0, width, height,c_black, c_black, c_black, c_black, 0)
draw_set_blend_mode(bm_add)
draw_set_blend_mode_ext(bm_one, bm_inv_src_color)
draw_surface_ext(application_surface, chroma, 0, screenzoom, screenzoom, 0, c_red, 0.1)
draw_surface_ext(application_surface, 0, 0, screenzoom, screenzoom, 0, c_lime, 0.1)
draw_surface_ext(application_surface, chroma, 0, screenzoom, screenzoom, 0, c_blue, 0.1)
draw_set_blend_mode(bm_normal)

draw_reset()

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DEBUG: Draw information.
if debug_mode show_debug_overlay(true) else show_debug_overlay(false)

/*if showinfo = 1 and scrMovingPlayerExists() {
    draw_set_font(fntTiny); draw_set_colour(c_white); draw_set_halign(fa_left)
    draw_text(32,32,"FPS: " + string(fps))
    draw_text(32,64,"CPU: " + string(fps_real))
    draw_text(32,96,"OBJECTS: " + string(instance_number(objFurniture)+instance_number(objWall)))
    draw_text(32,128,"ENEMIES: " + string(instance_number(objEnemy)))
    draw_text(32, 160, "DESAT: " + string(global.var_greyscale_fade))
    draw_text(32, 192, "CHARACTER: " + string(global.character))
    draw_text(32, 224, "HEALTH: " + string(objPlayer.hp))
    draw_text(32, 256, "MAX HP: " + string(objPlayer.max_hp))
    draw_text(32, 288, "THROWN?: " + string(objPlayer.thrown))
} 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw cursor.

// Adjust zoom for sniper; set default zoom.
if instance_exists(objPlayer) {
    if keyboard_check(vk_shift) {
        if scrCurrentWeaponExt(objPlayer.sprite_index = 29) or scrCurrentWeaponExt(objPlayer.sprite_index) = 49 factor = 2.5 + (global.scopeZoom / 2)
        else factor = 2.5
    } else factor = 1.5
    
    // Aiming with mouse.

    // Draw cursor to the boundaries of the view if looking further.
    global.mousex = objPlayer.x + ((display_mouse_get_x() - width * 0.5) * (view_wview[0] / width)) * factor
    global.mousey = objPlayer.y + ((display_mouse_get_y() - height * 0.5) * (view_hview[0] / height)) * factor

    if global.mousex &lt; view_xview[0] global.mousex = view_xview[0]
    if global.mousey &lt; view_yview[0] global.mousey = view_yview[0]
    if global.mousex &gt; view_xview[0] + view_wview[0] global.mousex = view_xview[0] + view_wview[0]
    if global.mousey &gt; view_yview[0] + view_hview[0] global.mousey = view_yview[0] + view_hview[0]
    x = global.mousex
    y = global.mousey

    // Draw cursor.
    scrGetCursor()

    // Lock-on behaviour.
    scrLockOnBehaviour()
}

global.dir += 1

test = 1

if !instance_exists(objPlayer)
or instance_exists(mnCharacterSelect)
test = 0

// Draw cursor.
if test = 1 scrGetCursor()

if DrawGrid {
    draw_set_alpha(0.3)
    mp_grid_draw(global.grid)
    draw_set_alpha(1)
};
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw HUD &amp; UI.
d3d_set_projection_ortho(0, 0, view_wview[0], view_hview[0], 0)

draw_sprite_stretched_ext(sprLens, 0, 0, 0, view_wview, view_hview, c_white, 0.7)
//draw_sprite_stretched_ext(sprBorder, 0, 0, 0, view_wview, view_hview, c_white, 1)

// Draw letterbox.
scrDrawLetterBox()

//Draw HUD.
if global.hud = 1 and global.done = 0 {

    // Draw HUD vignette.
    //draw_sprite_ext(sprHUDBars, 0, 0, -5, 0.8, 0.7, 0, c_black, 1)
    
    if global.character = 0 hudJohn()
    if global.character = 1 hudThomas()
    if global.character = 2 hudPierrette()
    if global.character = 3 hudSimone()
}

// Draw distortion.
if brus &gt; 0 {
    brus -= 1
    if lastbrus = 0 audio_play_sound(sndNoise, 1, 0)
    lastbrus = brus
    if brus = 0 audio_stop_sound(sndNoise)
    draw_sprite_tiled(choose(noise1, noise2, noise3, noise4), global.dir * 0.5, 0, 0)
}

// Draw static.
if staticfx &gt; 0 {
    staticfx -= 1
    if laststatic = 0 audio_play_sound(sndNoise, 1, 0)
    laststatic = staticfx
    if staticfx = 0 audio_stop_sound(sndNoise)
    draw_sprite_tiled(sprStatic, global.dir * 0.5, 0, 0)
}

scrDrawDamage()
scrDrawScratch()
scrDrawFlash()

// Draw arrow.
/*if instance_exists(objKnockedOut) {
    draw_sprite(sprArrow,arrow_index,objKnockedOut.x,objKnockedOut.y-24)
    arrow_index += 0.35
}*/

// Fade screens.
if fade = 0 {
    if amount &lt; 180 {
        color1 = merge_color(c_black, merge_color(c_aqua, c_white, 0.5 + lengthdir_x(0.5, amount)), 0.5 + lengthdir_x(0.5, amount))
        if amount &gt; 90 color2 = merge_color(c_black, merge_color(c_fuchsia, c_white, abs(lengthdir_y(1, amount))), abs(lengthdir_y(1, amount)))
        else color2 = c_white
        draw_set_blend_mode(bm_subtract)
        draw_rectangle_color(-10, -10, view_wview[0] + 10, view_hview[0] + 10, color1, color2, color2, color1, 0)
        draw_set_blend_mode(bm_normal)
    }
}

if fade = 1 {
    color1 = merge_color(c_black, merge_color(c_aqua, c_white, 0.5 + lengthdir_x(0.5, amount)), 0.5 + lengthdir_x(0.5, amount))
    if amount &gt; 90 color2 = merge_color(c_black, merge_color(c_fuchsia, c_white, abs(lengthdir_y(1, amount))), abs(lengthdir_y(1, amount)))
    else color2 = c_white
    draw_set_blend_mode(bm_subtract)
    draw_rectangle_color(-10, -10, view_wview[0] + 10, view_hview[0] + 10, color2, color1, color1, color2, 0)
    draw_set_blend_mode(bm_normal)
}

// Draw distortion.
draw_set_blend_mode(bm_add)
myx = -random(32)
myy = -random(32)
draw_sprite_stretched_ext(sprNoise, 0, myx, myy, display_get_gui_width(), display_get_gui_height(), merge_color(c_black, c_white, 0.6), 0.3)
draw_set_blend_mode(bm_normal)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="115">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DEBUG: show info.
showinfo = !showinfo
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="114">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DEBUG: Draw grid.
DrawGrid=!DrawGrid;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Restart if dead.
if instance_exists(objDrawRestart) {
    with(objDrawRestart) fade=1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pause the game.
if instance_exists(objPlayerDead) exit 

if fade = 0 and amount = 180 {
    if scrMovingPlayerExists() {
        if objPlayer.persistent = 1 objPlayer.persistent = 0
    }
    sound_ps(sndPause)
    
    // Control phone spawn.
    if !instance_exists(mnPhone) instance_create(x, y, mnPhone)
    global.screeneffect = 6
    
    // Control whether the phone is active or not.
    if instance_exists(mnPhone) {
        with mnPhone active = !active 
        if mnPhone.active = 0 global.active = 1
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
