<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWeapons</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>_WEAPON</parentName>
  <maskName>sprWeaponMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>friction=0.1
diradd=-1+round(random(1))*2
angle=random(360)
left=-1+round(random(1))*2
image_speed=0
hits=0
bounce=0
enemy=0
ammo=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Hit enemy.

// Adjust angle of rotation based on weapon speed.
angle += speed * 5 * diradd

// Weapon speed.
if speed &lt;= 0 {
    my_id = instance_create(x, y, _WEAPON)
    my_id.image_angle = angle
    my_id.image_index = image_index
    my_id.image_yscale = left
    my_id.ammo = ammo
    instance_destroy()
}

// If the speed is greater than 5...
if speed &gt; 2.5 {
    mask_index = sprite_index
    global.my_id = id

    // ...allow the weapon thrown to knock down enemies.
    with objEnemy {
        if scrCantGetHit(object_index) = false {
            if place_meeting(x, y, global.my_id) {
                global.state = 0
                objEffector.hitalpha = 1
                eflash = true
                hit_enemy = true
                alarm[1] = 5
                
                // What happens to the weapon?
                with global.my_id {
                    if image_index = 70 {
                        my_id = instance_create(x, y, objBrokenBottle)
                        sound_ps(sndBottleBreak)
                        instance_destroy()
                        exit
                    }
                    
                    move_bounce_all(0)
                    speed*=0.15
                    bounce=1
                }
                
                if global.gibfest = 1 scrEnemyDieExplode()
                else {

                    scrGetEnemyIdle() // Spawn weapons for idle enemies.
                    
                    // Knife throw death if a knife is thrown.
                    if global.my_id.image_index = 5 {
                        scrKnifeThrowHits()
                        with global.my_id instance_destroy()
                        instance_destroy()
                    } // High damage weapons.
                    else if global.my_id.image_index = 74 // Brick
                    or global.my_id.image_index = 70 // Bottle
                    {
                        if hit = 0 {
                            alert = 1
                            sound_ps(choose(sndHit, sndHit1, sndHit2, sndHit3))
                            sleep(50)
                            instance_create(x, y, objHitImpact)
                            instance_create(x, y, objBlastImpact)
                            hp -= 150
                            d = instance_create(x + choose(-random(24), random(24)), y - 5, objDamageCounter)
                            d.colour = global.c_damage
                            d.spd = random(3)
                            d.text = "150"
                            d.image_alpha = 1
                            d.speed = 3 + random(3)
                            d.direction = other.direction - 20 + random(40)
                            global.combotime = 240
                            global.combo += 1
                            hit = 1
                        }

                        if hp &lt;= 0 {
                            objEffector.whitealpha = 1

                            // Create health.
                            drop_health(0, 0, 1)

                            // Check if the enemy is armed.
                            scrEnemyDropWeapon()

                            // Destroy enemy.
                            instance_destroy()

                            body = instance_create(x, y, objDeadBody)
                            body.direction = global.dir
                            body.speed = 1.5 + random(1)
                            body.image_angle = body.direction

                            if round(random(10)) = 2 {
                                body.sprite_index = sprEDeadCracked
                                body.image_index = 0
                                body.direction = global.dir - 10 + random(20)
                                body.image_angle = body.direction
                                sound_ps(sndBonesBreak)
                                global.shake = 8
                                scrMeleeBlood(x, y)

                                // Assign a score.
                                create_points("BRAINED +100")
                            } else {
                                body.sprite_index = sprEDeadBlunt
                                body.direction = global.dir - 10 + random(20)
                                body.image_angle = body.direction
                                body.speed = 1 + random(2)
                                body.image_index = 4 + floor(random(11))
                                body.alarm[0] = 6
                                scrMeleeBlood(x, y)

                                // Assign a score.
                                create_points("PTTCHER +100")
                            }
                        }

                        // If the bottle is thrown at an enemy, break it.
                        if image_index = 70 or image_index = 71 {
                            my_id = instance_create(x, y, objBrokenBottle)
                            sound_ps(sndBottleBreak)
                            instance_destroy()
                            exit
                        }
                    } else { // Regular weapons
                    
                        if hit = 0 {
                            alert = 1
                            sound_ps(choose(sndHit, sndHit1, sndHit2, sndHit3))
                            sleep(50)
                            instance_create(x, y, objHitImpact)
                            instance_create(x, y, objBlastImpact)
                            hp -= 33
                            d = instance_create(x + choose(-random(24), random(24)), y - 5, objDamageCounter)
                            d.colour = global.c_damage
                            d.spd = random(3)
                            d.text = "33"
                            d.image_alpha = 1
                            d.speed = 3 + random(3)
                            d.direction = other.direction - 20 + random(40)                          
                            global.combotime = 240
                            global.combo += 1
                            hit = 1
                        }
                        
                        // Nonlethal
                        if hp &lt;= 0 {
                            sound_ps(sndWeaponHit)
                            global.shake = 8
                            scrEnemyGetKnockedOut(object_index, global.dir)
                            global.my_id.speed = 0
                        }
                    }
                }
            }
        }
    }
}
mask_index = sprWeaponMask
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objDoorV">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if image_index = 70 or image_index = 71 {
    my_id = instance_create(x, y, objBrokenBottle)
    sound_ps(sndBottleBreak)
    instance_destroy()
    exit
}

move_bounce_all(0)
speed*=0.15
sound_ps(sndHitWall)
bounce=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objWindow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shatter windows.

// Glass panels.
if other.object_index = objGlassPanelH {
    if vspeed &gt; 0 {
        other.add = -1
    } else {
        other.add = 1
    }
    with other {
        i = 0
        repeat(24) {
            my_id = instance_create(x + i * 1.5, y, objShard)
            my_id.speed = random(5)
            my_id.direction = add * 90 - 8 + random(16)
            i += 1
        }
        instance_create(x, y, objGlassPanelHBroken)
        instance_destroy()
        sound_ps(choose(sndGlass1, sndGlass2))
    }
    exit
}

if other.object_index = objGlassPanelV {
    if hspeed &gt; 0 other.add = -1 else other.add = 1
    with other {
        i = 0
        repeat(24) {
            my_id = instance_create(x, y + i * 1.5, objShard)
            my_id.speed = random(5)
            my_id.direction = 90 + add * 90 - 8 + random(16)
            i += 1
        }
        instance_create(x, y, objGlassPanelVBroken)
        instance_destroy()
        sound_ps(choose(sndGlass1, sndGlass2))
    }
    exit
}

// Windows.
if other.object_index = objWindowH {
    if vspeed &gt; 0 other.add = -1 else other.add = 1
    with other {
        i = 0
        repeat(24) {
            my_id = instance_create(x + i * 1.5, y, objShard)
            my_id.speed = random(5)
            my_id.direction = add * 90 - 8 + random(16)
            i += 1
        }
        instance_create(x, y, objBrokenWindowH)
        instance_destroy()
        sound_ps(choose(sndGlass1, sndGlass2))
    }
    exit
}

if other.object_index = objWindowV {
    if hspeed &gt; 0 other.add = -1 else other.add = 1
    
    with other {
        i = 0
        repeat(24) {
            my_id = instance_create(x, y + i * 1.5, objShard)
            my_id.speed = random(5)
            my_id.direction = 90 + add * 90 - 8 + random(16)
            i += 1
        }
        instance_create(x, y, objBrokenWindowV)
        instance_destroy()
        sound_ps(choose(sndGlass1, sndGlass2))
    }
    exit
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objWall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if image_index = 70 or image_index = 71 {
    my_id = instance_create(x, y, objBrokenBottle)
    sound_ps(sndBottleBreak)
    instance_destroy()
    exit
}

move_bounce_all(0)
speed*=0.15
sound_ps(sndHitWall)
bounce=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSolid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if image_index = 70 or image_index = 71 {
    my_id = instance_create(x, y, objBrokenBottle)
    sound_ps(sndBottleBreak)
    instance_destroy()
    exit
}

move_bounce_all(0)
speed*=0.15
sound_ps(sndHitWall)
bounce=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,x+1,y+1,image_xscale,image_yscale*left,angle,c_black,0.5)
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale*left,angle,image_blend,image_alpha)</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
