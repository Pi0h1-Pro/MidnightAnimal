<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWaterTile</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1004</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.25
surf = surface_create(64, 64)

surface_set_target(surf)
draw_clear_alpha(c_black, 0)
surface_reset_target()
reset = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if reset = 1 surface_free(surf)

if !surface_exists(surf) surf = surface_create(64, 64)
if image_angle = 0 global.myx = x global.myy = y

surface_set_target(surf)
texture_set_interpolation(true)
draw_surface_ext(surf, -0.5 + random(1), -0.5 + random(1), 1, 1, 0, c_red, 0.999)
with objSplatter draw_sprite_ext(sprite_index, image_index, x - global.myx, y - global.myy, image_xscale, image_yscale, image_angle, image_blend, image_alpha)
with objSplat draw_sprite_ext(sprite_index, image_index, x - global.myx, y - global.myy, image_xscale, image_yscale, image_angle, image_blend, image_alpha)
with objSmudge draw_sprite_ext(sprite_index, image_index, x - global.myx, y - global.myy, image_xscale, image_yscale, image_angle, image_blend, image_alpha)
with objBigBlood draw_sprite_ext(sprite_index, image_index, x - global.myx, y - global.myy, image_xscale, image_yscale, image_angle, image_blend, image_alpha)
with objTinyBlood draw_sprite_ext(sprite_index, image_index, x - global.myx, y - global.myy, image_xscale, image_yscale, image_angle, image_blend, image_alpha)
texture_set_interpolation(false)
surface_reset_target()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Free the surface.
surface_free(surf)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the blood to the surface.
draw_self()
if surface_exists(surf) {
    draw_set_blend_mode(bm_add)
    draw_surface_ext(surf,x,y,1,1,0,c_white,0.8)
    draw_set_blend_mode(bm_normal)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
