<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprStar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alpha = random(0.8) + 0.2 //Determining a random alpha for the stars.
image_speed=.3 + random(.4)

//These variable will store the position of the ship relevant to the room size and the amountofmove varable.
movex = 0
movey = 0

//This makes 1 in 10 stars not move at all and have an alpha of 2.
//Amountofmove determines how fast the stars will move on screen.
if random(100) &gt; 10
{
 ok = true //If ok = true then the stars will  move.
 amountofmove = random(1000)//This will determine how much the star moves reletive to the view.
                           //The lower this number the less movement there will be and so the star will appear further away.
 depth = amountofmove - amountofmove*2
}
 else
{
 alpha = 0.2 //How transparent the star will be this gives extra depth to the stars.
 ok = false //If ok = false then stars will not move. These stars will appear the most distant
};

//This sets the depth of the star

z=random(300)-400
scale= 1+(z/500)
image_alpha=scale

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Here we work out the movement of the star when the ship moves around.
if ok = true //Checks if we want this star to move.
{
    movex = view_xview[0]/room_width*amountofmove //This calculates the x movement for the star.
    movey = view_yview[0]/room_height*amountofmove//This calculates the y movement for the star.
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// This is kinda irrelevant it just makes the stars disappear when outside the border
if(view_xview[0] + xstart - movex&lt;50)or(view_yview[0] + ystart - movey&lt;50)or(view_xview[0] + xstart - movex&gt;1250)or(view_yview[0] + ystart - movey&gt;950)
{
 visible = false
}
else
{
 //Here we draw the star by adding the position of the view with the xstart coordinate and then taking away the movex or movey
 draw_sprite_ext(sprStar,0,view_xview[0] + xstart - movex,view_yview[0] + ystart - movey,1,1,0,c_white,alpha)
}

draw_sprite_ext(sprite_index,-1,x-(z*(-(x-(view_xview+view_wview/2))/500)),y-(z*(-(y-(view_yview+view_hview/2))/500)),scale,scale,0,c_white,image_alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
