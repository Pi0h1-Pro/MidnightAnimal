<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPWalkUnarmed</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>objPlayer</parentName>
  <maskName>sprPlayerMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playerlight = 0
global.cocked=0
active = 1
save = 0
alarm[0]=10
alarm[3] = 0

scrPlayerSpecialCase()
flashlight = 0
spot = 0
muzzle = 0

//Initiate Parker's berserk.
kills = 0
berserk = 0

if global.xbox = 1 scrInitXboxButtons()
if room = rmTutorial {
    global.maskindex = 0 global.maskon = 1 global.done = 1
}

global.pigkill = 0
image_speed = 0
global.done = 0

//SLOW TIME VARIABLES
isPause = false
reloadTime = 0
pauseTime = 0

//tiger = 20

handgun = 0
mags = 0
nothing = 0
currentweapon = 0
dir = 0
movex = 0
movey = 0
move = 0
viewspeed = 0
myxspeed = 0
myyspeed = 0
myspeed = 0
reload = 20
light = 0
legdir = 0
legindex = 0
left = 1
ammo = 0
reload = 0
wait = 0
lastflame = -1234

//ROLL VARIABLES
rollreload = 0
rollx = 0
rolly = 0

//KNIVES FOR NICOLE
knives = 20

//DUAL WIELD VARIABLES
aimon = 1
armangle = 0
index = 0
addangle = 0


energie = round(random(2))
cocked = 0

scrInitThrowPos()
scrInitMaskPos()
scrInitKeyboard()
scrInitTurning()
scrUpdateMaskPos(sprite_index)
last_sprite = sprite_index
throwindex = 0
masksprite = -1
maskindex = global.maskindex
maskon = global.maskon
release = 0
shieldwait = 0
aim = 0
global.enemy = -1234
if !variable_local_exists("clear") clear = 0
if !place_free(x, y) {
    x = global.executionx
    y = global.executiony
}

//MASK POWERS
if global.maskon = 1 {
    if global.maskindex = 9 energie = 1
    if global.maskindex = 21 energie = 2
    //if global.maskindex = 6 sprite_index = sprPWalkKnife

    //Magazine sizes.
    magsize = 0

    if sprite_index = sprPWalkSuppressedMG {
        ammo = 30 
        mags = 2
    } else global.magammo = 0

    if sprite_index = sprPWalkSilencedShotgun {
        ammo = 6 
        mags = 24
    } else global.magammo = 0

    if sprite_index = sprPWalkSniper {
        ammo = 13 
        mags = 2
    } else global.magammo = 0

    if global.maskindex = 6 {
        sprite_index = sprPWalkDW
        ammo = 64
        mags = 100
    } else global.magammo = 0
}

throwreload = 0

//Xbox controller.
if global.controller = 1 {
    instance_create(x, y, objPlayerController) instance_destroy()
}

//LSD shit.
h1=0
h2=128
walkdir = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(objPhoneConversation) or persistent=0 nothing=1 else active=1
persistent=0
scrSaveFloor() 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if !place_meeting(x,y,objPlayerCar) {
my_id=instance_create(x,y,objPVomit)
my_id.image_angle=dir
instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.loaded = 1
with objEffector {
    global.amount = amount amount = 0
}
game_save(working_directory + "\tempsave.sav")
with objEffector {
    amount = global.amount
}
global.loaded = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_activate_object(objLSLight)
alarm[0]=10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Xbox controls.
if global.xbox = 1 {
    scrXboxPlayerMouse()
    if button_pressed(5) event_perform(ev_keypress,ord('F'))
}

if muzzle &gt; 0 muzzle -= 3 else muzzle = 0

//Flashlight.
if flashlight = 1 and spot = 0 {
    my_id = instance_create(x + lengthdir_x(4, dir - 2), y + lengthdir_y(4, dir - 2), objDLCSpotlight)
    if instance_exists(my_id) {
        my_id.direction = dir
        my_id.image_angle = my_id.direction
    }
    spot = 1
}
walkdir+=2
scrPlayerSpecialCamera()

//Light.
/*if instance_exists(objPlayer) and surface_exists(global._lsys_surface) {
    lsys_light_set_position(l, objPlayer.x, objPlayer.y);
    lsys_update(alpha);
}*/


//Start with silencer.
if sprite_index = sprPCockGun {
    if wait &gt; 0 wait -= 1
    else {
        if image_index &lt; 25 {
            if image_index = 15 sound_ps(sndReload2)
            image_index += 0.3
        } else {
            sprite_index = sprPWalkSilencer
            image_index = 0
            ammo = 17
            active = 1
            aimon = 1
            //scrSaveFloor()
        }
    }
    exit
}

//Open locked door.
if sprite_index = sprPKeyLockOpen {
    if image_index &lt; 4 image_index += 0.2
    else {
        active = 1
        with objLockedDoor image_index = 1
        sprite_index = sprPWalkUnarmed
    }
    exit
}

scrPlayerMoveKeyboard()
scrPlayerKill()
scrAimFurther()
scrTurnAround()
scrLevelClear()
//if mags &gt; 0 
scrReload() 

//Reload weapons.
if ammo = 0 {
    if sprite_index = sprPWalkSilencedShotgun {
        sprite_index = sprPReloadSilencedShotgun image_index = 0 image_speed = 0
    }
    if sprite_index = sprPWalkSniper {
        sprite_index = sprPReloadSniper image_index = 0 image_speed = 0
    }
    if sprite_index = sprPWalkSuppressedMG {
        sprite_index = sprPReloadSuppressedMG image_index = 0 image_speed = 0
    }
}

//Reload dual wield.
//if (ammo = 0 or keyboard_check_pressed(ord('F'))) and (sprite_index = sprPWalkDW or sprite_index = sprPTurnDW) {
if ammo = 0  and (sprite_index = sprPWalkDW or sprite_index = sprPTurnDW) {

        if mags &gt; 0 {
        sprite_index = sprPReloadDW
        image_index = 0
        image_speed = 0
    } else {
        sprite_index = sprPWalkUnarmed
        image_index = 0
        image_speed = 0

        //Drop weapons when magazine is depleted.
        my_id = instance_create(x, y, objBeretta)
        my_id.direction = -45 - random(13)
        my_id.speed = 2

        my_id = instance_create(x, y, objBeretta)
        my_id.direction = 45 + random(13)
        my_id.speed = 2

        sound_ps(sndReload4)
    }
}

if sprite_index = sprPReloadDW {
    if image_index = 3 {
        my_id = instance_create(x + lengthdir_x(8, dir + 90 * left) + lengthdir_x(5, dir), y + lengthdir_y(8, dir + 90 * left) + lengthdir_y(5, dir), objGunClip)
        my_id.image_index = 2
        my_id.speed = 3.5
        my_id.direction = dir + 90 * left - 20 + random(40)
    }

    if image_index = 4 {
        my_id = instance_create(x + lengthdir_x(8, dir + 270 * left) + lengthdir_x(5, dir), y + lengthdir_y(8, dir + 270 * left) + lengthdir_y(5, dir), objGunClip)
        my_id.image_index = 2
        my_id.speed = 3.5
        my_id.direction = dir + 270 * left - 20 + random(40)
    }
    if image_index &lt; 16 image_index += 0.5
    else {
        mags -= 1 sprite_index = sprPWalkDW
    }
    if image_index &gt; 10 and ammo = 0 {
        sound_ps(sndReload4) ammo = 32
        sound_play(sndRecharge)
    }
    if image_index &gt; 13 and ammo = 32 {
        sound_ps(sndReload4) ammo = 64
        sound_play(sndRecharge)
    }
}

//Draw steam for boiling pot.
if sprite_index = sprPWalkBoilingPot {
    if round(random(5)) = 2 instance_create(x + lengthdir_x(11, dir - 33 * left), y + lengthdir_y(11, dir - 33 * left), objSteam)
}


//Break glass with nonlethal attacks.
if sprite_index = sprPAttackPunch or sprite_index = sprPAttackUnarmed1 or sprite_index = sprPAttackDrill {
    lastx = x
    lasty = y
    global.spacex = lengthdir_x(12, dir)
    global.spacey = lengthdir_y(12, dir)
    x += global.spacex
    y += global.spacey


    global.my_id = id
    with objGlassPanelH {
        if place_meeting(x, y, global.my_id) {
            SteamIncStat("Windows", 1)
            if global.my_id.lasty &lt; y + 2 {
                add = -1
            } else {
                add = 1
            }
            i = 0
            repeat(40) {
                my_id = instance_create(x + i * 1.5, y, objShard)
                my_id.speed = random(5)
                my_id.direction = add * 90 - 8 + random(16)
                i += 1
            }
            instance_create(x, y, objGlassPanelHBroken)
            global.shake = 2
            instance_destroy()
            if instance_exists(objLSD) sound_play(choose(sndGlassBreakLSD, sndGlassReverse))
                else sound_play(choose(sndGlass1, sndGlass2))
        }
    }

    with objGlassPanelV {
        if place_meeting(x, y, global.my_id) {
            SteamIncStat("Windows", 1)
            if global.my_id.lastx &lt; x + 2 {
                add = -1
            } else {
                add = 1
            }
            i = 0
            repeat(40) {
                my_id = instance_create(x, y + i * 1.5, objShard)
                my_id.speed = random(5)
                my_id.direction = 90 + add * 90 - 8 + random(16)
                i += 1
            }
            instance_create(x, y, objGlassPanelVBroken)
            global.shake = 2
            instance_destroy()
            if instance_exists(objLSD) sound_play(choose(sndGlassBreakLSD, sndGlassReverse))
                else sound_play(choose(sndGlass1, sndGlass2))
        }
    }

    x += lengthdir_x(12, dir)
    y += lengthdir_y(12, dir)

    with objEnemy {
        if scrCantGetHit(object_index) valid = 0
        else valid = 1

        if (place_meeting(x, y, objPlayer) or place_meeting(x + global.spacex, y + global.spacey, objPlayer)) and valid = 1 {
            mask_index = sprWeaponMask
                //if scrCollisionLineExt(x,y,objPlayer.lastx,objPlayer.lasty,4,objSolid,objDoorV,objWallSoftH) {scrMoveSolidOff() mask_index=sprMask objPlayer.x=objPlayer.lastx objPlayer.y=objPlayer.lasty exit}
            mask_index = sprMask
            edir = point_direction(objPlayer.lastx, objPlayer.lasty, x, y)
            sound_ps(sndDoorHit)
            global.shake = 3
            my_id = instance_create(x, y, objKnockedOut)
            my_id.type = object_index

            if scrIsPolice(object_index) my_id.sprite_index = sprPoliceGetUp
            my_id.direction = edir - 10 + random(20)
            my_id.angle = my_id.direction
            with my_id move_outside_solid(angle - 180, 16)
            my_id.speed = 3
            scrIdleGetEnemy()


            if scrIsGang(object_index) my_id.sprite_index = sprEGangGetUp
            my_id.direction = edir - 10 + random(20)
            my_id.angle = my_id.direction
            with my_id move_outside_solid(angle - 180, 16)
            my_id.speed = 3
            scrIdleGetEnemy()

            if sprite_index = sprEWalkUnarmed or sprite_index = sprPoliceWalkUnarmed or sprite_index = sprEGangWalkUnarmed noweapon = 1
            else noweapon = 0
            if noweapon = 0 {
                global.test = 0
                with objEnemy
                if alert = 1 global.test += 1
                    //my_id = instance_create(x, y - 12, objScore)
                    //my_id.text = "+" + string(200 + 400 * global.factor) + "pts"
                global.myscore += 200 + 400 * global.factor
                global.boldscore += 200 + 400 * global.factor
                global.combotime += 240
                global.killx[global.kills] = x
                global.killy[global.kills] = y
                global.kills += 1
                my_id = instance_create(x, y, objWeaponThrow)
                my_id.direction = direction - 70 + random(40)
                my_id.image_index = scrCurrentWeaponExt(sprite_index)
                my_id.speed = 2 + random(2)
                my_id.ammo = ammo
            }
            instance_destroy()
        }
    }
    x = lastx
    y = lasty
}

//Roll.
if sprite_index = sprPRoll {
    global.maskon = 0
    scrMoveSolidOn()
    scrUpdateMaskPos()
    scrMoveGlide(rollx, rolly)
    scrCameraPan(x, y)
    scrCameraPan(x, y)
    if !place_free(x + rollx, y + rolly) and image_index &lt; 12 image_index = 12
    if !keyboard_check(ord('F')) {
        if image_index &lt; 12 and image_index &gt; 4 image_index = 12
    }
    scrMoveSolidOff()
    if image_index &lt; 16 image_index += 0.25
    else {
        sprite_index = weapon
        active = 1
        aimon = 1
        image_index = 0
        global.maskon = 0
        global.maskindex = maskindex
    }
    exit
} else {
    if rollreload &gt; 0 rollreload -= 1
}

previousx = x
previousy = y

scrEnterRage()

//Infinite reload ability for Parker.
if global.maskindex = 8 and 
    (objPlayer.sprite_index = sprPWalkSilencer
    or objPlayer.sprite_index = sprPWalkHandgun
    or objPlayer.sprite_index = sprPWalkM16
    or objPlayer.sprite_index = sprPWalkAK 
    or objPlayer.sprite_index = sprPWalkShotgun
    or objPlayer.sprite_index = sprPWalkDoubleBarrel 
    or objPlayer.sprite_index = sprPWalkScorpion
    or objPlayer.sprite_index = sprPWalkMP5
    or objPlayer.sprite_index = sprPWalkUzi
    or objPlayer.sprite_index = sprPWalkP90
    or objPlayer.sprite_index = sprPWalkAutoShotgun
    or objPlayer.sprite_index = sprPWalkHuntingRifle
    or objPlayer.sprite_index = sprPWalkSilencedUzi
    or objPlayer.sprite_index = sprPWalkThompson
    or objPlayer.sprite_index = sprPAttackSilencer
    or objPlayer.sprite_index = sprPAttackHandgun
    or objPlayer.sprite_index = sprPAttackM16
    or objPlayer.sprite_index = sprPAttackAK
    or objPlayer.sprite_index = sprPAttackHuntingRifle
    or objPlayer.sprite_index = sprPAttackShotgun
    or objPlayer.sprite_index = sprPAttackDoubleBarrel1
    or objPlayer.sprite_index = sprPAttackDoubleBarrel2
    or objPlayer.sprite_index = sprPAttackScorpion
    or objPlayer.sprite_index = sprPAttackMP5
    or objPlayer.sprite_index = sprPAttackThompson
    or objPlayer.sprite_index = sprPAttackUzi
    or objPlayer.sprite_index = sprPAttackP90
    or objPlayer.sprite_index = sprPAttackSilencedUzi
    or objPlayer.sprite_index = sprPAttackAutoShotgun)
 {
    weapon = instance_nearest(x, y, objWeapon)
    if instance_exists(weapon) {
        if scrIsGun(weapon.image_index) {
            if weapon.ammo &gt; 0 {
                if point_distance(x, y, weapon.x, weapon.y) &lt; 24 {
                    ammo += weapon.ammo
                    with weapon instance_destroy()
                    sound_play(sndPickupWeapon)
                }
            }
        }
    }
}

//If using dual wield, turn all the dodgers into fat enemies/dogs.
if global.maskindex = 6 {

    with objEnemyDodger {
        instance_create(x, y, objEnemyFatStatic)
        instance_destroy()
    }
    
    with objCommando {
        instance_create(x, y, objDogPatrol)
        instance_destroy()
    }

}

//If Tony, delete all crouching enemies.
if global.maskindex = 2 {
    
    with objEHideM16 {
        instance_destroy()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(objLSD) {
    with other instance_destroy()
    scrCreateBloodWhirl(x, y)
    alarm[0] = 10
    global.shake = 12
    repeat(2) scrMeleeBlood(x, y)
    scrMeleeBlood(x, y)
    repeat(24) {
        my_id = instance_create(x, y, objBrains)
        my_id.direction = random(360)
        my_id.speed = 4 + random(3)
    }
    repeat(16) {
        my_id = instance_create(x, y, objIntestine)
        my_id.direction = random(360)
        my_id.speed = 3 + random(2.5)
    }
    repeat(16) {
        my_id = instance_create(x, y, objFleshChunk)
        my_id.direction = random(360)
        my_id.speed = 3.25 + random(2.5)
    }
    
    
    my_id = instance_create(x, y, objPlayerDead)
    my_id.bled = 1
    my_id.sprite_index = sprBloodyExploded
    instance_destroy()
    sound_play(sndPunch)
    sound_play(sndHit)
    sound_play(sndThunder)
} else {

    //Dodge bullet if rolling.
    if sprite_index = sprPRoll {
        if image_index &lt; 17 exit
    } else {
        global.shake = 10
        with other {
            if place_meeting(x, y, objSolid) or place_meeting(x, y, objSolidCaster) or place_meeting(x, y, objWall) {
                move_outside_solid(direction - 180, speed * 2)
                if !place_meeting(x, y, objPlayer) exit
            }
        }
        global.my_id = id
        image_xscale = 1.5
        image_yscale = 1.5
        bullets = 0
        energie -= 1

        image_xscale = 1
        image_yscale = 1
        edir = other.direction
        test = 0

        scrPlayerShot()

        if bullets &gt; 1 or round(random(1)) or energie &lt; 0 {
            my_id = instance_create(x, y, objPlayerDead)
            if bullets &gt; 1 my_id.sprite_index = sprPBackShotgun
            else my_id.sprite_index = sprPBackMachinegun
            my_id.image_index = floor(random(8))
            my_id.direction = edir
            my_id.speed = 1.5 + random(1) + bullets * 0.15
            my_id.image_angle = my_id.direction
            scrMeleeBlood(x,y)
            if room = rmTrainstationEntrance or room = rmTrainstationDownstairs {
                nothing = 1
            } else {
                mask = instance_create(x + lengthdir_x(24, edir), y + lengthdir_y(24, edir), objMaskDrop)
                mask.direction = edir - 40 + random(80)
                mask.speed = 1.5 + random(1)
            }
            instance_destroy()
        }

    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End muzzle flash.

if instance_exists(objPlayerLight) {
    with objPlayerLight {
        instance_destroy()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="55">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Lock on.
scrLockOn()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Special abilities.
//if release &lt; 20
//release += 1
//else 
if sprite_index=sprPEnterRage exit
if global.xbox = 1 exit


if room = rmSequence1 or room = rmSequence2
or room = rmSequence3 or room = rmSequence4
or room = rmSequence5 or room = rmSequence6
or room = rmSequence7 or room = rmSequence8
or room = rmSequence9 or room = rmSequence10
or room = rmSequence11 or room = rmSequence12
or room = rmSequence12b or room = rmSequence13
or room = rmSequence14 {

    /*if place_meeting(x + lengthdir_x(12, dir), y + lengthdir_y(12, dir), objAnsweringMachine) {
        if objAnsweringMachine.active = 1 {
            scrGetMessage(phone)
            sprite_index = sprPTakePhone
            image_index = 0
            sound_play(sndPhone)
        }
    }*/

    if place_meeting(x + lengthdir_x(12, dir), y + lengthdir_y(12, dir), objBox) {
        if objBox.sprite_index = sprBox {
            objBox.sprite_index = sprBoxOpen
            objBox.image_index = 1
            sound_play(sndBox)
        } else {
            with objBox {
                sound_play(sndPickupWeapon)
                scrGetMessage(objOpenedBox)
                my_id = instance_create(x, y, objOpenedBox)
                my_id.image_angle = image_angle
                instance_destroy()
                global.package = 1
                global.done = 1
            }
        }
    }
} else scrPlayerPickUp()

    if instance_exists(objPhoneConversation) exit
    if place_meeting(x + lengthdir_x(10, dir), y + lengthdir_y(10, dir), objSecretMask) or place_meeting(x, y, objSecretMask) {
        with objSecretMask {
            global.masks[image_index] = 1
            global.newmask[global.newmasks] = image_index
            global.newmasks += 1
            sound_play(sndToken)
            my_id = instance_create(x, y, objLetterFound)
            my_id.text = '"' + scrMaskGetName(image_index) + '"'
            instance_destroy()
        }
        scrCheckMasks()
        exit
    }

    
//Tiger roar.
if global.maskindex = 2 //and tiger&lt;=0
    {
        objEffector.amp = 40
        sound_play(sndTiger)
        global.shake = 22
        scrHearPlayer()
    }

//Switch weapons with flamethrower and sniper.
if global.maskindex = 15 or global.maskindex = 7 {
    scrSwitch()
} else exit

//Dual wield spread is in Draw event.
if sprite_index = sprPWalkDW or sprite_index = sprPReloadDW or sprite_index = sprPTurnDW exit


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Special cases.
if reload &gt; 0 exit
//if scrIsDisarming() or 
if sprite_index = sprPEnterRage exit
if instance_exists(objPhoneConversation) exit
if global.xbox = 1 exit

/*if room = rmSequence1 or room = rmSequence2
or room = rmSequence3 or room = rmSequence4
or room = rmSequence5 or room = rmSequence6
or room = rmSequence7 or room = rmSequence8
or room = rmSequence9 or room = rmSequence10
or room = rmSequence11 or room = rmSequence12
or room = rmSequence12b or room = rmSequence13
or room = rmSequence14 {
    event_perform(ev_mouse,ev_global_right_press)
} */



with objWindowV {
    if sprite_index = sprWindowSill nothing = 1
    else {
        if place_meeting(x + 16, y, objPlayer) {        
            scrDropWeapon()
            my_id = instance_create(x + 6, y + 16, objPlayerOpenWindow)
            my_id.sprite_index = sprPClimbWindow
            my_id.image_angle = 0
            with my_id {
                scrInitMaskPos() scrUpdateMaskPos(sprite_index)
            }
            sprite_index = sprWindowSill
            image_index = 1
            my_id = instance_create(x - 6, y, objWindowOpen)
            my_id.image_xscale = -1
            reload = 2
            exit
        }
    }
}


    if instance_exists(playerlight) {
        playerlight.x=x
        playerlight.y=y
    }



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attack.
scrPlayerAttack()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check to see if firing.

if scrIsFiring(sprite_index) and reload &gt; 0 {
if !instance_exists(objPlayerLight) and muzzle = 0 {
        //with objPlayerLight instance_destroy()
        playerlight=instance_create(x,y,objPlayerLight)
        muzzle = 3
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrPlayerAnimationEnd()

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if persistent = 1 {

    if move = 1 {
        move = 0
        x += movex
        y += movey
        xview += movex
        yview += movey
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if object_index = objPlayerDead or global.paused = 1 exit
if alarm[3] &lt;= 0 alarm[3] = 10
if scrCheckCenterOn() scrCenterOn(x, y)

if !instance_exists(objLightSystem) {
    instance_create(0, 0, objLightSystem)
}

if !instance_exists(objMaskMenu) and global.maskon = 1 and global.maskindex = 0 and cocked = 0 and global.done = 0 {
    scrCenterOn(x, y)
    if global.cocked = 1 exit
    if room = rmTrainstationEntrance or room = rmApartment1Entrance or room = rmApartment2Entrance or room = rmHouse1Downstairs or room = rmHouse5Downstairs or room = rmHouse2Downstairs or room = rmHotelEntrance or room = rmBuildingFloor1 or room = rmPhoneHomEntrance or room = rmHouse4Middle or room = rmHouse3Downstairs or room = rmSwatDownstairs or room = rmOfficeEntrance or room = rmPoliceHQFloor1 or room = rmBossClubFloor1 or room = rmMansionEntrance {
        if global.paused = 1 nothing = 1
        else {
            dir = 270
            sprite_index = sprPCockGun
            active = 0
            aimon = 0
            global.cocked = 1
        }
    }
}

if instance_exists(objEnemy) clear = 0
else clear = 1

if room = rmTutorial clear = 1
if global.paused = 1 {
    exit
}
if !instance_exists(objEffector) instance_create(x, y, objEffector)
if !instance_exists(objSurfacer) {
    instance_create(x, y, objSurfacer)
    with objSurfacer scrSurfaceTiles()
}

//Create LSD effects.
if global.maskindex = 13 {
    if !instance_exists(objLSD) instance_create(x, y, objLSD)
    if !instance_exists(objLSDBlend) instance_create(x, y, objLSDBlend)
}

if persistent = 1 {
    view_xview[0] = xview
    view_yview[0] = yview
    with objEffector {
        vlastx = view_xview[0]
        vlasty = view_yview[0]
    }
    alarm[0] = 36

} else {
    vdist = point_distance(x, y, room_width / 2, room_height / 2)
    vdir = point_direction(room_width / 2, room_height / 2, x, y)
    view_xview[0] = x + lengthdir_x(vdist * 0.2, vdir - 180) - view_wview[0] * 0.5
    view_yview[0] = y + lengthdir_y(vdist * 0.2, vdir - 180) - view_hview[0] * 0.5
    view_angle[0] = lengthdir_y(vdist * (1 / 160), vdir * 2)
    with objEffector {
        vlastx = view_xview[0]
        vlasty = view_yview[0]
    }

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>file_delete("tempsave.sav")
scrSaveFloor()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if persistent = 1 exit

//DRAW GLOW
draw_set_blend_mode(bm_add)
draw_circle_color(x, y, 48 + random(6) + light, make_color_hsv(0, 0, 30 + light * 2), c_black, 0)
draw_set_blend_mode(bm_normal)

if sprite_index = last_sprite or sprite_index = sprPRoll
nothing = 1
else {
    scrUpdateMaskPos(sprite_index)
    last_sprite = sprite_index
}

if sprite_index = sprPTakePhone {
    if !instance_exists(objPhoneConversation) sprite_index = sprPWalkUnarmed
    else {
        if image_index &lt; 3 image_index += 0.15
    }
}

//DRAW LEGS
if myspeed = 2.25 legsprite = sprLegsStairs else legsprite = sprLegs

//Draw dual wield.

//Checks to see if the sprites are currently the dual-wielding sprites.
if sprite_index = sprPWalkDW or sprite_index = sprPTurnDW {

    //Extra safeguard to check to see if the player is really dual-wielding or if it's just all a ruse.
    if aimon = 1 {

        //This is the directional component of the arms; originally, it orients towards the mouse, but will gradually increase as the player
        //holds down the right mouse.
        if global.xbox=1 dir = scrXboxPlayerLook() + addangle else dir = point_direction(x, y, global.mousex, global.mousey) + addangle

        //Variable to check to see if the player is aiming further.
        turn = keyboard_check(vk_shift)

        //Spread arms to shoot.

        //Check to see if the player is holding the right mouse or LB, which allows the arms to spread.
        if mouse_check_button(mb_right) or button_pressed(5) {

            //If the angle of the arms is less than 90, than add a base of 4.5 (degress) per step. If the player's firing, make it faster.
            //If the player's turning, make it faster.
            if armangle &lt; 90 armangle += 4.5 + 4.5 * (1 - mouse_check_button(mb_left)) + turn * 4.5

            //armangle1 corresponds to the top arm.
            armangle1 = dir + armangle

            //armangle2 corresponds to the bottom arm.
            armangle2 = dir - armangle

            //If the right mouse button isn't being held...
        } else {

            //If the angle of the arms is above 5, subtract 5 per step. You want to check to see if it's above 5 because if it's below 5, the angle will be negative.
            if armangle &gt; 5 armangle -= 5

            //This is to return the armangle to its base of 0.
            else armangle = 0

            //See above for correspondent values.
            armangle1 = dir + armangle
            armangle2 = dir - armangle

            //If the armangle is at its default position 0, both arms will point at the mouse. Don't worry about the vector calculations for lengthdir, 
            //they were determined through some fantastic guesswork.
            if armangle = 0 {
                armangle1 = point_direction(x + lengthdir_x(6, dir + 90), y + lengthdir_y(6, dir + 90), global.mousex, global.mousey)
                armangle2 = point_direction(x + lengthdir_x(6, dir - 90), y + lengthdir_y(6, dir - 90), global.mousex, global.mousey)
            }
        }

        //addangle is a variable which controls how much the arms should spread by.
        addangle = scrRotate(addangle, armangle * (turn) * aimon, 10)

        //scrRotate takes three arguments: 
        //argument0 = dir is the current direction.
        //argument1 = destdir is the desired direction, or where you want the final angle to be pointing towards.
        //argument2 = turnspeed which is the rotation speed.
        //scrRotate returns the direction which the instance has been rotated.

        //Basically, what we did was, we want to add to the current armangle the final direction to which the arm has rotated.

    }

    //If !aimon = 1, which means we're not actually aiming...
    else {
        //Every angle resets to the default direction, dir, and addangle is 0 since you're not adding anything.
        armangle = dir
        addangle = 0
        armangle1 = dir
        armangle2 = dir
    }

    //This controls behaviour for the player if aiming further, or, in the game, turning the player's head.

    //If turn is active (you're pressing the shift key) and you're also pressing the right mouse key, the current sprite is the turning sprite.
    if turn and mouse_check_button(mb_right) sprite_index = sprPTurnDW
    else {

        //Otherwise, if you're not adding anything to the overall angle, the base sprite returns to the normal walking animation.
        if addangle &lt; 5 sprite_index = sprPWalkDW
    }

    //If your current sprite is the player turning his head, the image index is a floor of the angle being added divided by 31. 
    //This will animate the player turning his head and synchronise it with the arms spreading.
    if sprite_index = sprPTurnDW image_index = floor(addangle * (1 / 31))

    //Draw legs.
    draw_sprite_ext(legsprite, legindex, x + 1, y + 1, image_xscale, image_yscale, legdir, c_black, 1)

    //Draw leg shadow. 
    draw_sprite_ext(sprite_index, image_index, x + 1, y + 1, image_xscale, left, dir, c_black, 0.5)
    draw_sprite_ext(legsprite, legindex, x, y, image_xscale, image_yscale, legdir, image_blend, image_alpha)

    //Draw the upper arm.
    draw_sprite_ext(sprArmHandgun, index, x + lengthdir_x(8, dir + 90), y + lengthdir_y(8, dir + 90), image_xscale, image_yscale, armangle1, image_blend, 1)

    //Draw the lower arm.
    draw_sprite_ext(sprArmHandgun, index, x + lengthdir_x(8, dir - 90), y + lengthdir_y(8, dir - 90), image_xscale, -1, armangle2, image_blend, 1)

    //Draw the player walking while dual-wielding/
    if sprite_index = sprPWalkDW {
        draw_sprite_ext(sprite_index, 0, x, y, image_xscale, image_yscale, dir, image_blend, image_alpha)
        draw_sprite_ext(sprite_index, 1, x, y, image_xscale, image_yscale, dir, image_blend, image_alpha)
    } else {
        draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, dir, image_blend, image_alpha)
        draw_sprite_ext(sprPWalkDW, 1, x, y, image_xscale, image_yscale, dir, image_blend, image_alpha)
    }

} else {

    if aimon = 1 {
        if global.xbox=1 dir=scrXboxPlayerLook() else dir=point_direction(x,y,global.mousex,global.mousey)
    }
    draw_sprite_ext(legsprite, legindex, x + 1, y + 1, image_xscale, image_yscale, legdir, c_black, 0.5)
    draw_sprite_ext(sprite_index, image_index, x + 1, y + 1, image_xscale, left, dir, c_black, 0.5)
    draw_sprite_ext(legsprite, legindex, x, y, image_xscale, image_yscale, legdir, image_blend, image_alpha)
    draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, left, dir, image_blend, image_alpha)
}

//LEAVE BAG
if sprite_index = sprPLeaveBag {
    dir = point_direction(x, y, objDumpster.x + 20, objDumpster.y + 12)
}

draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale * left, dir, image_blend, image_alpha)
if reload &gt; 0 reload -= 1
if light &gt; 0 light -= 3 else light = 0

//THROW WEAPONS
if sprite_index = sprPWalkThrow {
    left = 1
    draw_sprite_ext(sprThrowWeapons, throwindex, x + lengthdir_x(throwadd[floor(image_index)], dir) + lengthdir_x(7, dir - 90) + 1, y + 1 + lengthdir_y(throwadd[floor(image_index)], dir) + lengthdir_y(7, dir - 90), image_xscale, image_yscale, dir + lengthdir_x(20, 360 * (image_index * (1 / 8))), c_black, 0.5)
    draw_sprite_ext(sprThrowWeapons, throwindex, x + lengthdir_x(throwadd[floor(image_index)], dir) + lengthdir_x(7, dir - 90), y + lengthdir_y(throwadd[floor(image_index)], dir) + lengthdir_y(7, dir - 90), image_xscale, image_yscale, dir + lengthdir_x(20, 360 * (image_index * (1 / 8))), image_blend, image_alpha)
}

//PUT ON MASK
if sprite_index = sprPMaskSlip {
    draw_sprite_ext(masksprite, image_index, x, y, image_xscale, image_yscale * left, dir, image_blend, image_alpha)
}

if maskon = 1 scrDrawMask(0) // or !(objPlayer.sprite_index = sprPRoll)

if global.locked = 0 {
    with objLockedDoor {
        if solid = 1 {
            draw_sprite_ext(sprArrow, 0, x - 12 + lengthdir_x(3, global.dir * 8), y + 16, 1, 1, 90, c_white, 1)
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reload guns manually.
if (global.maskindex = 7 or global.maskindex = 12 or global.maskindex = 18) and instance_exists(objPlayer) {
    if sprite_index = sprPWalkSilencedShotgun {
        sprite_index = sprPReloadSilencedShotgun image_index = 0 image_speed = 0
    }
    if sprite_index = sprPWalkSniper {
        sprite_index = sprPReloadSniper image_index = 0 image_speed = 0
    }
    if sprite_index = sprPWalkSuppressedMG {
        sprite_index = sprPReloadSuppressedMG image_index = 0 image_speed = 0
    }
} else exit
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="80">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>exit
sprite_index=sprPWalkPipe</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Secondary abilities.

//Throw knives.
/*if global.maskindex = 6 and objPlayer.knives &gt; 0 {
    reload = 15
    sprite_index = sprPAttackThrow
    image_speed = 0.5
    knives -= 1

    if sprite_index = sprPAttackThrow {
        my_id = instance_create(x, y, objThrowingKnife)
        global.dir = dir
        with my_id {
            move_contact_solid(global.dir, 12)
        }
        my_id.direction = dir
        my_id.image_angle = dir
        my_id.speed = 24
        sound_play(sndThrow)
    }
}*/

//Create laser sight.
if (global.maskindex = 7 or global.maskindex = 18) and 
(objPlayer.sprite_index = sprPWalkSniper or objPlayer.sprite_index = sprPAttackSniper or objPlayer.sprite_index = sprPReloadSniper) {
sound_play(sndLaserSight)
if !instance_exists(objLaserSight) 
   instance_create(x, y, objLaserSight)
   else if instance_exists(objLaserSight) 
   with objLaserSight instance_destroy()

}

//Dodge roll.
if global.maskindex = 16 {
    if sprite_index = sprPRoll or rollreload &gt; 0 nothing = 1
    else {
        weapon = sprite_index
        sprite_index = sprPRoll
        rollreload = 20
        down = 0
        right = 0
        if keyboard_check_direct(ord(global.downkey)) down += 1
        if keyboard_check_direct(ord(global.upkey)) down -= 1
        if keyboard_check_direct(ord(global.rightkey)) right += 1
        if keyboard_check_direct(ord(global.leftkey)) right -= 1
        rolldir = point_direction(x, y, x + right, y + down)
        if abs(down) &lt; 1 and abs(right) &lt; 1 rolldir = round(dir * (1 / 45)) * 45
        rollx = lengthdir_x(1.5, rolldir)
        rolly = lengthdir_y(1.5, rolldir)
        dir = rolldir
        image_index = 0
        active = 0
        aimon = 0
        image_speed = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="67">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>flashlight = !flashlight
/*exit
if keyboard_check(vk_shift) {
with objEnemy instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.LS_glow=!global.LS_glow
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.LS_glow=!global.LS_glow
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.LS_spec=!global.LS_spec
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Execute enemies.
if sprite_index=sprPEnterRage exit 
scrKillShield()


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>aim=!aim</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hold shift to aim.
event_perform(ev_keypress,vk_control)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
