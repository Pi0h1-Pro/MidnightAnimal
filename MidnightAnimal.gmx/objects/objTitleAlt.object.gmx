<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = 0
surf1=surface_create(room_width,room_height) 
surf2=surface_create(room_width,room_height) 

//Draw stars.
i = 0
repeat(72) {
    starx[i] = random(room_width)
    stary[i] = random(room_height / 2)
    starsize[i] = random(2) * random(1)
    starintensity[i] = random(1)
    i += 1
}

i = 0
repeat (138) {
    mydir[i] = random(360)
    i += 1
}

sxeasy_play(working_directory+"\HorseSteppin.mp3")

sun = 1
tree = 0

alarm[0] = 180
alarm[1] = 450
//alarm[2]=1+random(100)
yellow = merge_color(merge_color(c_orange, c_fuchsia, 0.2+lengthdir_x(0.2,dir)), merge_color(c_orange, c_fuchsia, 0.2+lengthdir_x(0.2,dir)), i * (1 / 138))
orange = merge_color(merge_color(c_orange, c_yellow, 0.2+lengthdir_x(0.2,dir)), merge_color(c_orange, c_yellow, 0.2+lengthdir_x(0.2,dir)), i * (1 / 138))
sea = 1
seax1 = 0
seax2 = 48
index1=0
index2=22
repeat (48) {
    myy = random(48)
    instance_create(random(room_width), room_height/2+random(48), objSeaGlimmer)
}
//disable for steam version
//global.steamon = 0

global.xbox = 0
scrInitXboxButtons()
if file_exists(working_directory+"\xbox") {
    global.xbox = 1
    dllinit()
}
global.mvol = 1
global.svol = 1
scrLoadVol()
wait = 0
global.alienware = 0
if file_exists(working_directory+"\alienware") {
    global.alienware = 1
    scrAlienWareInit()
    scrAlienWarePink()
} else global.alienware = 0
global.controllertype = 1
global.upkey = 'W'
global.downkey = 'S'
global.leftkey = 'A'
global.rightkey = 'D'
global.restartkey = 'R'
scrLoadKeys()
global.hud=1
global.maskload = 0
coldir = 0
x = room_width/2
y = room_height/3-12
//dir = random(10000)
repeats = 1
global.shake = 0
alt[0] = "NEW GAME"
scrLoadUnlocked()
alt[1] = "CONTINUE"
i = 0 repeat (20) {if global.levels[i] = 1 i += 1}
if i = 20 alt[1] = "SCENES"
i = 0
alt[2] = "OPTIONS"
alt[3] = "QUIT GAME"
global.bonuslist = ds_list_create()
global.bonustime = 0
global.newmasks = 0
nextlevel = rmIntermission1
level = 0
select = 0
rdir = 0
global.paused = 0

global.surf1 = surface_create(room_width, room_height+64)
surface_set_target(global.surf1)
draw_clear_alpha(c_black, 0)
surface_alpha()
surface_reset_target()

global.surf2 = surface_create(640*3, 480*3)
surface_set_target(global.surf2)
draw_clear_alpha(c_black, 0)
surface_alpha()
surface_reset_target()

global.surf3 = surface_create(640*3, 480*3)
surface_set_target(global.surf3)
draw_clear_alpha(c_black, 0)
surface_alpha()
surface_reset_target()

c_amount = 0
fade = 0
volume = 1
presstart = 0
pressup = 0
pressdown = 0
global.controller = 0
pindex = 0
global.talked = 1
global.i = 0


//Create buildings.
repeat (10) {
    my_id = instance_create(x, y, objPalmTree)
with my_id {repeat (global.i*45) amount *= 1.01}
    global.i += 1
}


global.surfaces = 1
global.blood = 1
if file_exists(working_directory+"\blood") global.blood = 0
if file_exists(working_directory+"\surfaces") global.surfaces = 0

global.surfacesprites = 0
global.resetstory = 0
global.comboflash = 0
global.parttitle[0] = "Act I"
global.parttitle[1] = "The Good Soldier"
global.nextlevel = rmIntermission1
global.sequence = rmSequence1
global.revisit = 0
global.maskon = 1
global.maskindex = 0
global.floorbloods = 0
quit = 0
scrLoadAchievements()
scrCheckLetters()
scrCheckGuns()
scrCheckMasks()

repeat (7) instance_create(random(room_width)+32, 276-random(20), objPalmTree)
repeat (5) instance_create(random(room_width), 0, objHouse)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,objFlock)
alarm[3]=600 + random(400)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    shinex = random(room_width)
    shiney = random(room_height / 2)
    star = instance_create(shinex, shiney, objStar)
    star.image_alpha = choose(0.3, 0.5, 0.7, 0.9)
    star.image_xscale = 0.5 + random(2)
    star.image_yscale = image_xscale
    alarm[2]=1+random(100)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wave1 = instance_create(32,128,objWave)
wave2 = instance_create(32,208,objWave)
alarm[1]=345
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,objPalmTree)
alarm[0]=45
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create sea glimmer.
if sea = 1 {
    my_id = instance_create(random(room_width), room_height / 2 + 3 + random(48), objSeaGlimmer)
}


//Create small houses.
if tree &gt; 0 tree -= 1
else {
    my_id = instance_create(room_width / 2 - 5, room_height / 2, objSmallHouse)
    my_id.hspeed = -0.233
    my_id = instance_create(room_width / 2 + 5, room_height / 2, objSmallHouse)
    my_id.hspeed = 0.233
    tree = 50
}

if wait &gt; 0 wait -= 1

if !surface_exists(surf1) {
    surf1 = surface_create(room_width, room_height)
    if surface_exists(surf1) {
        surface_set_target(surf1)
        draw_clear_alpha(c_black, 0)
        surface_reset_target()
    }
}

if keyboard_check_pressed(ord(global.upkey)) event_perform(ev_keypress, ord('W'))
if keyboard_check_pressed(ord(global.downkey)) event_perform(ev_keypress, ord('S'))
if keyboard_check_pressed(ord(global.rightkey)) event_perform(ev_keypress, ord('D'))
if keyboard_check_pressed(ord(global.leftkey)) event_perform(ev_keypress, ord('A'))

if !surface_exists(surf1) exit
surface_set_target(surf1)
draw_clear_alpha(c_black, 0)
draw_set_halign(fa_center)
draw_set_valign(fa_center)

i = 0
ii = 0
draw_set_font(fntMenu)


if level = 3 {
    amount = 0.5 + lengthdir_x(0.5, dir * 10)
    draw_set_color(merge_color(yellow, yellow, amount))
    draw_text(x + 1, y + 76, "WARNING!")
    amount = 0.5 - lengthdir_x(0.5, dir * 10)
    draw_set_color(merge_color(yellow, yellow, amount))
    draw_text(x, y + 76, "WARNING!")
    draw_set_font(fntWarning)
    draw_set_color(c_red)
    draw_text(x + 1, y + 86, "PLEASE UPDATE YOUR GAMEPAD DRIVERS#BEFORE ENABLING THIS FEATURE!#ARE YOU SURE YOU WANT TO PROCEED?")
    draw_text_color(x, y + 85, "PLEASE UPDATE YOUR GAMEPAD DRIVERS#BEFORE ENABLING THIS FEATURE!#ARE YOU SURE YOU WANT TO PROCEED?", merge_color(yellow, yellow, 0.5 + lengthdir_x(0.5, dir * 10)), merge_color(yellow, yellow, 0.5 + lengthdir_x(0.5, dir * 10 + 90)), merge_color(yellow, yellow, 0.5 + lengthdir_x(0.5, dir * 10 + 180)), merge_color(yellow, yellow, 0.5 + lengthdir_x(0.5, dir * 10 + 270)), 1)



    draw_set_color(c_red)
    draw_text(x + 1, 215, "THE LATEST GAMEPAD DRIVERS CAN BE#DOWNLOADED FREE AT MICROSOFT.COM!")
    draw_set_color(yellow)
    draw_text(x, 214, "THE LATEST GAMEPAD DRIVERS CAN BE#DOWNLOADED FREE AT MICROSOFT.COM!")
    draw_set_font(fntMenu)
    start_x = 160

    //Main menu font colour for selections.
    repeat(2) {
        if select = i {
            repeats = 6 + lengthdir_x(5, dir * 10)

            //Colour if currently highlighted:
            repeat(repeats) {
                draw_set_color(merge_color(yellow, orange, ii * 0.085))
                draw_text(start_x + ii, y + 76 + 60, alt[i])
                ii += 1
            }
        }

        //Default colour elsewise:
        else {
            //Initiate colours.
            color1 = merge_color(orange, c_aqua, 0.5 + lengthdir_x(0.5, dir))
            color2 = merge_color(merge_color(orange, yellow, 0.5), yellow, 0.5 + lengthdir_x(0.5, dir))
            amount = 0.5 - lengthdir_x(0.5, dir * 10)
            draw_set_color(merge_color(color2, color1, amount))
            draw_text(start_x, y + 76 + 60, alt[i])
        }
        i += 1
        start_x += 80
    }
}

//OPTIONS MENU

//VOLUME SLIDER
if level = 2 {
    alt[0] = "MUSIC " + string(round(global.mvol * 100)) + "%"

    repeat(2) {
        if select = i {
            repeats = 6 + lengthdir_x(5, dir * 10)
            repeat(repeats) {
                draw_set_color(merge_color(orange, yellow, ii * 0.085))
                draw_text(x + ii, y + 76 + i * 20, alt[i])
                ii += 1
            }

        } else {
            amount = 0.5 + lengthdir_x(0.5, dir * 10)
            draw_set_color(merge_color(yellow, orange, amount))
            draw_text(x + 1, y + 76 + i * 20 + 1, alt[i])
            amount = 0.5 - lengthdir_x(0.5, dir * 10)
            draw_set_color(merge_color(yellow, yellow, amount))
            draw_text(x, y + 76 + i * 20, alt[i])
        }
        i += 1
    }
}

//Colour of main menu font.
if level = 1 {
    repeat(5) {
        if select = i {
            repeats = 6 + lengthdir_x(5, dir * 10)
            repeat(repeats) {
                draw_set_color(merge_color(yellow, orange, ii * 0.085))
                draw_text(x + ii, y + 76 + i * 20, alt[i])
                ii += 1
            }
        } else {
            amount = 0.5 + lengthdir_x(0.5, dir * 10)
            draw_set_color(merge_color(orange, c_aqua, amount))
            draw_text(x + 1, y + 76 + i * 20 + 1, alt[i])
            amount = 0.5 - lengthdir_x(0.5, dir * 10)
            draw_set_color(merge_color(orange, yellow, amount))
            draw_text(x, y + 76 + i * 20, alt[i])
        }
        i += 1
    }
}

if level = 0 {
    repeat(4) {
        if select = i {
            repeats = 6 + lengthdir_x(5, dir * 10)

            //Colour of current selection.
            repeat(repeats) {
                draw_set_color(merge_color(orange, yellow, ii * 0.085))
                draw_text(x + ii, y + 76 + i * 20, alt[i])
                ii += 1
            }
        } else {

            //Otherwise, colour of nonselected items.
            amount = 0.5 + lengthdir_x(0.5, dir * 10)
            draw_set_color(merge_color(yellow, yellow, amount))
            draw_text(x + 1, y + 76 + i * 20 + 1, alt[i])
            amount = 0.5 - lengthdir_x(0.5, dir * 10)
            draw_set_color(merge_color(yellow, yellow, amount))
            draw_text(x, y + 76 + i * 20, alt[i])
        }
        i += 1
    }
}

if level = 4 {
    start_y = 0

    draw_set_font(fntWarning)
    draw_set_color(c_red)
    draw_text(x + 1, y + 80, "TURN OFF IF YOU ARE GETTING STUCK#BETWEEN FLOORS AND CAN'T PROGRESS")
    draw_text_color(x, y + 80, "TURN OFF IF YOU ARE GETTING STUCK#BETWEEN FLOORS AND CAN'T PROGRESS", merge_color(yellow, yellow, 0.5 + lengthdir_x(0.5, dir * 10)), merge_color(yellow, yellow, 0.5 + lengthdir_x(0.5, dir * 10 + 90)), merge_color(yellow, yellow, 0.5 + lengthdir_x(0.5, dir * 10 + 180)), merge_color(yellow, yellow, 0.5 + lengthdir_x(0.5, dir * 10 + 270)), 1)
    draw_set_font(fntMenu)

    repeat(4) {
        if i == 1 start_y += 28
        if select = i {
            repeats = 6 + lengthdir_x(5, dir * 10)
            repeat(repeats) {
                draw_set_color(merge_color(orange, yellow, ii * 0.085))
                draw_text(x + ii, y + 76 + i * 20 + start_y, alt[i])
                ii += 1
            }
        } else {
            if i = 1 and global.surfaces = 1 {
                amount = 0.5 + lengthdir_x(0.5, dir * 10)
                draw_set_color(merge_color(c_gray, orange, amount))
                draw_text(x + 1, y + 76 + i * 20 + 1 + start_y, alt[i])
                amount = 0.5 - lengthdir_x(0.5, dir * 10)
                draw_set_color(merge_color(c_gray, orange, amount))
                draw_text(x, y + 76 + i * 20 + start_y, alt[i])
            } else {
                amount = 0.5 + lengthdir_x(0.5, dir * 10)
                draw_set_color(merge_color(yellow, c_red, amount))
                draw_text(x + 1, y + 76 + i * 20 + 1 + start_y, alt[i])
                amount = 0.5 - lengthdir_x(0.5, dir * 10)
                draw_set_color(merge_color(yellow, c_red, amount))
                draw_text(x, y + 76 + i * 20 + start_y, alt[i])
            }
        }
        i += 1
    }
}

draw_set_blend_mode(bm_normal)

surface_alpha()
surface_reset_target()
if sea = 1 {
    my_id = instance_create(random(room_width), room_height / 2 + 3 + random(48), objSeaGlimmer)
    my_id.image_speed = 0.7
}

if tree &gt; 0 tree -= 1
else {
    my_id = instance_create(room_width / 2 - 25, room_height / 2, objSmallHouse)
    my_id.hspeed = -0.333
    my_id = instance_create(room_width / 2 + 25, room_height / 2, objSmallHouse)
    my_id.hspeed = 0.333
    tree = 50
}


if wait &gt; 0 wait -= 1

if !surface_exists(surf1) {
    surf1 = surface_create(room_width, room_height)
    if surface_exists(surf1) {
        surface_set_target(surf1)
        draw_clear_alpha(c_red, 0)
        surface_reset_target()
    }
}

if keyboard_check_pressed(ord(global.upkey)) event_perform(ev_keypress, ord('W'))
if keyboard_check_pressed(ord(global.downkey)) event_perform(ev_keypress, ord('S'))
if keyboard_check_pressed(ord(global.rightkey)) event_perform(ev_keypress, ord('D'))
if keyboard_check_pressed(ord(global.leftkey)) event_perform(ev_keypress, ord('A'))

if !surface_exists(surf1) exit
surface_set_target(surf1)
draw_clear_alpha(c_red, 0)
draw_set_halign(fa_center)
draw_set_valign(fa_center)

i = 0
ii = 0
draw_set_font(fntMenu)


if level = 3 {
    amount = 0.5 + lengthdir_x(0.5, dir * 10)
    draw_set_color(merge_color(yellow, yellow, amount))
    draw_text(x + 1, y + 76, "WARNING!")
    amount = 0.5 - lengthdir_x(0.5, dir * 10)
    draw_set_color(merge_color(yellow, yellow, amount))
    draw_text(x, y + 76, "WARNING!")
    draw_set_font(fntWarning)
    draw_set_color(c_red)
    draw_text(x + 1, y + 86, "PLEASE UPDATE YOUR GAMEPAD DRIVERS#BEFORE ENABLING THIS FEATURE!#ARE YOU SURE YOU WANT TO PROCEED?")
    draw_text_color(x, y + 85, "PLEASE UPDATE YOUR GAMEPAD DRIVERS#BEFORE ENABLING THIS FEATURE!#ARE YOU SURE YOU WANT TO PROCEED?", merge_color(yellow, yellow, 0.5 + lengthdir_x(0.5, dir * 10)), merge_color(yellow, yellow, 0.5 + lengthdir_x(0.5, dir * 10 + 90)), merge_color(yellow, yellow, 0.5 + lengthdir_x(0.5, dir * 10 + 180)), merge_color(yellow, yellow, 0.5 + lengthdir_x(0.5, dir * 10 + 270)), 1)



    draw_set_color(c_red)
    draw_text(x + 1, 215, "THE LATEST GAMEPAD DRIVERS CAN BE#DOWNLOADED FREE AT MICROSOFT.COM!")
    draw_set_color(yellow)
    draw_text(x, 214, "THE LATEST GAMEPAD DRIVERS CAN BE#DOWNLOADED FREE AT MICROSOFT.COM!")
    draw_set_font(fntMenu)
    start_x = 160

    //Main menu font colour for selections.
    repeat(2) {
        if select = i {
            repeats = 6 + lengthdir_x(5, dir * 10)

            //Colour if currently highlighted:
            repeat(repeats) {
                draw_set_color(merge_color(yellow, orange, ii * 0.085))
                draw_text(start_x + ii, y + 76 + 60, alt[i])
                ii += 1
            }
        }

        //Default colour elsewise:
        else {
            amount = 0.5 + lengthdir_x(0.5, dir * 10)
            draw_set_color(merge_color(yellow, yellow, amount))
            draw_text(start_x + 1, y + 76 + 60 + 1, alt[i])
            amount = 0.5 - lengthdir_x(0.5, dir * 10)
            draw_set_color(merge_color(yellow, yellow, amount))
            draw_text(start_x, y + 76 + 60, alt[i])
        }
        i += 1
        start_x += 80
    }
}

//OPTIONS MENU

//VOLUME SLIDER
if level = 2 {
    alt[0] = "MUSIC " + string(round(global.mvol * 100)) + "%"

    repeat(2) {
        if select = i {
            repeats = 6 + lengthdir_x(5, dir * 10)
            repeat(repeats) {
                draw_set_color(merge_color(orange, yellow, ii * 0.085))
                draw_text(x + ii, y + 76 + i * 20, alt[i])
                ii += 1
            }

        } else {
            amount = 0.5 + lengthdir_x(0.5, dir * 10)
            draw_set_color(merge_color(yellow, orange, amount))
            draw_text(x + 1, y + 76 + i * 20 + 1, alt[i])
            amount = 0.5 - lengthdir_x(0.5, dir * 10)
            draw_set_color(merge_color(yellow, yellow, amount))
            draw_text(x, y + 76 + i * 20, alt[i])
        }
        i += 1
    }
}

//Colour of main menu font.
if level = 1 {
    repeat(5) {
        if select = i {
            repeats = 6 + lengthdir_x(5, dir * 10)
            repeat(repeats) {
                draw_set_color(merge_color(yellow, orange, ii * 0.085))
                draw_text(x + ii, y + 76 + i * 20, alt[i])
                ii += 1
            }
        } else {
            amount = 0.5 + lengthdir_x(0.5, dir * 10)
            draw_set_color(merge_color(orange, c_aqua, amount))
            draw_text(x + 1, y + 76 + i * 20 + 1, alt[i])
            amount = 0.5 - lengthdir_x(0.5, dir * 10)
            draw_set_color(merge_color(orange, yellow, amount))
            draw_text(x, y + 76 + i * 20, alt[i])
        }
        i += 1
    }
}

if level = 0 {
    repeat(4) {
        if select = i {
            repeats = 6 + lengthdir_x(5, dir * 10)
            repeat(repeats) {
                draw_set_color(merge_color(orange, yellow, ii * 0.085))
                draw_text(x + ii, y + 76 + i * 20, alt[i])
                ii += 1
            }
        } else {
            amount = 0.5 + lengthdir_x(0.5, dir * 10)
            draw_set_color(merge_color(yellow, yellow, amount))
            draw_text(x + 1, y + 76 + i * 20 + 1, alt[i])
            amount = 0.5 - lengthdir_x(0.5, dir * 10)
            draw_set_color(merge_color(yellow, yellow, amount))
            draw_text(x, y + 76 + i * 20, alt[i])
        }
        i += 1
    }
}

if level = 4 {
    start_y = 0

    draw_set_font(fntWarning)
    draw_set_color(c_red)
    draw_text(x + 1, y + 80, "TURN OFF IF YOU ARE GETTING STUCK#BETWEEN FLOORS AND CAN'T PROGRESS")
    draw_text_color(x, y + 80, "TURN OFF IF YOU ARE GETTING STUCK#BETWEEN FLOORS AND CAN'T PROGRESS", merge_color(yellow, yellow, 0.5 + lengthdir_x(0.5, dir * 10)), merge_color(yellow, yellow, 0.5 + lengthdir_x(0.5, dir * 10 + 90)), merge_color(yellow, yellow, 0.5 + lengthdir_x(0.5, dir * 10 + 180)), merge_color(yellow, yellow, 0.5 + lengthdir_x(0.5, dir * 10 + 270)), 1)
    draw_set_font(fntMenu)

    repeat(4) {
        if i == 1 start_y += 28
        if select = i {
            repeats = 6 + lengthdir_x(5, dir * 10)
            repeat(repeats) {
                draw_set_color(merge_color(orange, yellow, ii * 0.085))
                draw_text(x + ii, y + 76 + i * 20 + start_y, alt[i])
                ii += 1
            }
        } else {
            if i = 1 and global.surfaces = 1 {
                amount = 0.5 + lengthdir_x(0.5, dir * 10)
                draw_set_color(merge_color(c_dkgray, orange, amount))
                draw_text(x + 1, y + 76 + i * 20 + 1 + start_y, alt[i])
                amount = 0.5 - lengthdir_x(0.5, dir * 10)
                draw_set_color(merge_color(c_gray, orange, amount))
                draw_text(x, y + 76 + i * 20 + start_y, alt[i])
            } else {
                amount = 0.5 + lengthdir_x(0.5, dir * 10)
                draw_set_color(merge_color(yellow, c_red, amount))
                draw_text(x + 1, y + 76 + i * 20 + 1 + start_y, alt[i])
                amount = 0.5 - lengthdir_x(0.5, dir * 10)
                draw_set_color(merge_color(yellow, c_red, amount))
                draw_text(x, y + 76 + i * 20 + start_y, alt[i])
            }
        }
        i += 1
    }
}

draw_set_blend_mode(bm_normal)

surface_alpha()
surface_reset_target()

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if level = 2 {
    if fade = 1 or wait &gt; 0 exit
    wait = 2
    if select = 0 {
        if global.mvol &lt; 1 global.mvol += 0.01 sxeasy_setVolume(1)
    }
}
sound_play(sndNav)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if level = 2 {
    if fade = 1 or wait &gt; 0 exit
    wait = 2
    if select = 0 {
        if global.mvol &gt; 0 global.mvol -= 0.01 sxeasy_setVolume(1)
    }
}
sound_play(sndNav)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keyboard,ord('D'))
sound_play(sndNav)</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keyboard,ord('A'))
sound_play(sndNav)</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keypress,vk_enter)</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//vcapture_init();
if file_exists(working_directory+"\mask.tmp") file_delete(working_directory+"\mask.tmp")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sxeasy_init(1);
global.steamon=0
steamdll_init()

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if coldir &lt; 180 coldir += 2
if coldir &lt; 90 coldir += 3
if coldir &lt;= 90 color = merge_color(c_black, merge_color(c_white, c_fuchsia, abs(lengthdir_y(1, coldir))), abs(lengthdir_y(1, coldir)))
if coldir &gt; 90 color = merge_color(c_fuchsia, c_aqua, abs(lengthdir_x(1, coldir)))
dir += 0.25

//Draws the background of the room, which is the black-reddish sky.
purple = merge_color(c_maroon, c_black, 0.35 + lengthdir_x(0.25, dir * 0.25))
draw_rectangle_color(-20, -20, room_width + 20, room_height + 20, merge_color(purple, c_purple, 0.15 + lengthdir_x(0.15, dir * 0.25)), merge_color(purple, c_purple, 0.15 + lengthdir_x(0.15, dir * 0.25 + 45)), merge_color(c_purple, c_fuchsia, 0.65 + lengthdir_x(0.24, dir * 0.6 + 30)), merge_color(c_purple, c_fuchsia, 0.65 + lengthdir_x(0.24, dir * 0.6)), 0)
//Draw stars.

//i is just a temporary counter.
i = 0

//Draw 72 stars. This can be increased or decreased.
repeat(72) {

    //Draw a silver-white circle, for each iteration from 0 to 72. 
    //starx[i] and stary[y] are randomised variables determining the random position of the stars within the room, and are defined within the Create event.
    //starsize[i] randomises the size of the star and is defined within the Create event.
    //starintensity[i] determines the 'brightness' of the star by randomising the merging of silver with white. If you want all really bright stars, delete
    //random(starintensity[i]) and change it to 1. Conversely, for dull stars, delete it and replace it with 0. Otherwise, leave it.
    draw_circle_color(starx[i], stary[i], starsize[i], merge_color(merge_color(c_silver, c_white, random(1)), c_white, random(starintensity[i])), c_black, 0)
    i += 1
}

//Draw flashing stars.
with objStar {
    draw_sprite_ext(sprite_index, image_index, x, y, 1, 1, 0, merge_color(c_white, merge_color(c_ltgray, c_silver, random(1)), random(1)), 1)
}

//Draw glow of sun.
draw_set_blend_mode(bm_add)
draw_circle_color(room_width / 2, room_height / 2 + 30, 180 - lengthdir_x(3, dir), orange, c_black, 0)

//Draws the innermost smaller ring of the sun, which just barely forms a halo around the sun, and is a pinkish tinge.
draw_circle_color(room_width / 2, room_height / 3 + 14, 80 + lengthdir_x(10, dir * 0.25), c_fuchsia, c_black, 0)

//Draw horizon strip.
color = merge_color(merge_color(c_purple, c_orange, 0.3), merge_color(c_maroon, c_red, 0.3), i * (1 / 138))
draw_rectangle_color(0, room_height / 2 - 22, room_width, room_height / 2, c_black, c_black, color, color, 0)

//Draw sun.
draw_sprite_general(sprBigMoon, 0, 0, 0, 276, 212, x - 138 / 3, y - 13, 1 / 3, 1 / 3, 0, merge_color(c_orange, c_fuchsia, 0.2), merge_color(c_orange, c_fuchsia, 0.2), merge_color(orange, c_orange, 0.5 + lengthdir_x(0.5, dir)), merge_color(orange, c_orange, 0.5 + lengthdir_x(0.5, dir)), 1)

draw_set_blend_mode(bm_normal)

//Draw title.
//draw_sprite_general(sprTitle, 0, 0, 0, 234, 50, 240, 108, 1, 1, image_angle, merge_color(c_purple, c_fuchsia, 0.5 + lengthdir_x(0.5, dir)), merge_color(c_purple, c_fuchsia, 0.5 + lengthdir_x(0.5, dir)), merge_color(orange, c_orange, 0.5 + lengthdir_x(0.5, dir)), merge_color(orange, c_orange, 0.5 + lengthdir_x(0.5, dir)), 1)
//draw_sprite_general(sprTitle, 1, 0, 0, 234, 50, 240, 108, 1, 1, image_angle, merge_color(c_aqua, c_aqua, 0.5 + lengthdir_x(0.5, dir)), merge_color(c_aqua, c_aqua, 0.5 + lengthdir_x(0.5, dir)), merge_color(orange, c_orange, 0.5 + lengthdir_x(0.5, dir)), merge_color(orange, c_orange, 0.5 + lengthdir_x(0.5, dir)), 1)

draw_sprite_ext(sprTitle, 0, 240, 108, 1, 1, image_angle, merge_color(c_fuchsia, orange, 0.5 + lengthdir_x(0.5, dir)), 1)
draw_sprite_ext(sprTitle, 1, 240, 108, 1, 1, image_angle, merge_color(c_aqua, orange, 0.5 + lengthdir_x(0.5, dir)), 1)


//Small houses on the horizon.
with objSmallHouse {
    dir = 0
    color = merge_color(c_white, c_fuchsia, 0.75 + lengthdir_x(0.25, x * 4 + objTitle.dir))
    color1 = merge_color(c_yellow, c_orange, 0.5 + lengthdir_x(0.5, dir))
    color2 = merge_color(merge_color(c_white, c_fuchsia, 0.5), c_white, 0.5 + lengthdir_x(0.5, dir))
    draw_sprite_general(sprite_index, image_index, 0, 0, 21, 53, x - 5.5, y - 5.5 + lengthdir_x(0.6, x + objTitle.dir * 2), 0.5, 0.5, 0, color, color, color2, color2, .4)
}

//Draw sea.
draw_rectangle_color(-100, room_height / 2, room_width + 100, room_height + 100, merge_color(c_orange, orange, -lengthdir_x(0.5, dir) + 0.5), merge_color(c_orange, orange, -lengthdir_x(0.5, dir) + 0.5), merge_color(c_fuchsia, c_fuchsia, -lengthdir_x(0.5, dir) + 0.5), merge_color(c_fuchsia, c_fuchsia, -lengthdir_x(0.5, dir) + 0.5), 0)
i = 0
if sun &gt; 0 sun -= 1
else sun = 4

//Draw sun's reflection on water.
draw_set_blend_mode(bm_add)
repeat(138) {
    addx = lengthdir_x(i * 0.08, dir + i * 3)
    if sun = 0 hue[i] = -0.5 + random(1) - random(i * 0.01) + random(i * 0.02)
    color2 = merge_color(merge_color(c_white,c_white,0.5+lengthdir_x(0.5,dir)),merge_color(c_red,c_red,0.5+lengthdir_x(0.5,dir)),i*(1/138))
    draw_sprite_general(sprBigMoon, 0, 0, 138 + i, 276, 1, x - 138 / 3 + addx + hue[i], y + 162 / 3 + (i * 2) / 3, 1 / 3, 2 / 3, 0, color2, color2, color2, color2, 0.95 + lengthdir_x(0.05, mydir[i]))
    mydir[i] += 4
    if mydir[i] &gt; 360 mydir[i] -= 360
    i += 1
}

draw_set_blend_mode(bm_normal)
dir += 1

//Glimmer in the ocean.
with objSeaGlimmer {
    draw_sprite_ext(sprite_index, image_index, x, y, 1, 1, 0,
        merge_color(c_white, merge_color(c_ltgray, c_silver, random(1)), random(1)), 1)
}

//Cascading waves.
with objWave {
    image_alpha = 0.7
    image_xscale = 1 + y * 0.02
    if y &gt; 0 image_yscale = y * 0.01
    else image_yscale = 0
    dir += 2
    if y &lt; 0 image_blend = c_white
    else image_blend = merge_color(c_white, c_orange, y * (1 / (room_height + 32)))
    i = 0

    repeat(6) {
        draw_sprite_ext(sprite_index, index[i], x + i * (sprite_get_width(sprite_index) * 0.5) * image_xscale, room_height / 2 + y * 0.5 * image_xscale, image_xscale, image_yscale, image_angle, image_blend, image_alpha)
        draw_sprite_ext(sprite_index, index[i], x - i * (sprite_get_width(sprite_index) * 0.5) * image_xscale, room_height / 2 + y * 0.5 * image_xscale, image_xscale, image_yscale, image_angle, image_blend, image_alpha)
        index[i] += 0.1
        i += 1
    }

    if y &lt; room_height + 60 y += 0.5
    else y = -30
}


/*
//Draw smaller sea waves.
i = 0
repeat(ceil((room_width + 96) / 96)) {
    if index1 &lt; 28.15 color = merge_color(c_orange, c_silver, (index1 + 1) / 30)
    else color = merge_color(c_white, c_ltgray, ((index1 + 1) - 28) * 0.065)
    draw_sprite_ext(sprSea, index1, seax1 + i * 96, room_height / 2, 1, 1, 0, color, 0.25)
    if index1 &lt; 28.15 color = merge_color(c_orange, c_ltgray, (index1 + 1) / 30)
    else color = merge_color(c_white, c_fuchsia, ((index1 + 1) - 28) * 0.065)
    draw_sprite_ext(sprSea, index1 - 1, seax1 + i * 96, room_height / 2, 1, 1, 0, color, 0.25)
    if index2 &lt; 28.15 color = merge_color(c_fuchsia, c_teal, (index2 + 1) / 30)
    else color = merge_color(c_white, c_orange, ((index2 + 1) - 28) * 0.065)
    draw_sprite_ext(sprSea, index2, seax2 + i * 96, room_height / 2, 1, 1, 0, color, 0.25)
    if index2 &lt; 28.15 color = merge_color(c_orange, c_fuchsia, (index2 + 1) / 30)
    else color = merge_color(c_orange, c_fuchsia, ((index2 + 1) - 28) * 0.065)
    draw_sprite_ext(sprSea, index2 - 1, seax2 + i * 96, room_height / 2, 1, 1, 0, color, 0.25)
    i += 1
}
if index1 &lt; 44 index1 += 0.2
else index1 = 0
if index2 &lt; 44 index2 += 0.2
else index2 = 0
if seax1 &gt; -96 seax1 -= 1 + index1 * 0.03
else seax1 += 96
if seax2 &gt; -96 seax2 -= 1 + index2 * 0.03
else seax2 += 96
*/
with objBird draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,c_white,1)

if surface_exists(surf1) {
    draw_surface_ext(surf1, -1, 0, 1, 1, 0, c_black, 1)
    draw_surface_ext(surf1, 0, 1, 1, 1, 0, c_black, 1)
    draw_surface_ext(surf1, 0, -1, 1, 1, 0, c_black, 1)
    draw_surface_ext(surf1, 1, 0, 1, 1, 0, c_black, 1)
    draw_surface_ext(surf1, 2, 2, 1, 1, 0, c_black, 0.5)
    draw_surface_ext(surf1, 0, 0, 1, 1, 0, c_white, 1)
} else {
    draw_set_font(fntSubtitles)
    draw_set_valign(fa_top)
    draw_set_halign(fa_center)
    draw_set_color(c_black)
    draw_text(x - 1, y, "YOUR SYSTEM IS#OUT OF VIDEO MEMORY#PLEASE RESTART THE GAME!")
    draw_text(x + 1, y, "YOUR SYSTEM IS#OUT OF VIDEO MEMORY#PLEASE RESTART THE GAME!")
    draw_text(x, y + 1, "YOUR SYSTEM IS#OUT OF VIDEO MEMORY#PLEASE RESTART THE GAME!")
    draw_text(x, y - 1, "YOUR SYSTEM IS#OUT OF VIDEO MEMORY#PLEASE RESTART THE GAME!")
    draw_set_color(c_white)
    draw_text(x, y, "YOUR SYSTEM IS#OUT OF VIDEO MEMORY#PLEASE RESTART THE GAME!")
}

//Causes the entire room to move.
view_angle[0] = lengthdir_y(1, dir * 1.33)

if fade = 0 {
    if c_amount &lt; 180 {
        c_amount += 10
        color1 = merge_color(c_white, merge_color(c_silver, c_white, 0.5 + lengthdir_x(0.5, c_amount)), 0.5 + lengthdir_x(0.5, c_amount))
        if c_amount &gt; 90 color2 = merge_color(c_white, merge_color(c_fuchsia, c_silver, abs(lengthdir_y(1, c_amount))), abs(lengthdir_y(1, c_amount)))
        else color2 = c_white
        draw_set_blend_mode(bm_subtract)
        draw_rectangle_color(view_xview[0] - 10, view_yview[0] - 10, view_xview[0] + view_wview[0] + 10, view_yview[0] + view_hview[0] + 10, color1, color2, color2, color1, 0)
        draw_set_blend_mode(bm_normal)
    }
}

if fade = 1 {
    if c_amount &gt; 0 {
        c_amount -= 5
        if select = 0 sxeasy_setVolume(c_amount * (1 / 180))
        color1 = merge_color(c_white, merge_color(c_silver, c_white, 0.5 + lengthdir_x(0.5, c_amount)), 0.5 + lengthdir_x(0.5, c_amount))
        if c_amount &gt; 90 color2 = merge_color(c_white, merge_color(c_fuchsia, c_silver, abs(lengthdir_y(1, c_amount))), abs(lengthdir_y(1, c_amount)))
        else color2 = c_white
        draw_set_blend_mode(bm_subtract)
        draw_rectangle_color(view_xview[0] - 10, view_yview[0] - 10, view_xview[0] + view_wview[0] + 10, view_yview[0] + view_hview[0] + 10, color2, color1, color1, color2, 0)
        draw_set_blend_mode(bm_normal)
    } else {
        {
            if select = 0 { //global.sequence      =      rmSequence1 
                sxeasy_stop() sxeasy_setVolume(0) //sxeasy_play(working_directory+"\ItsSafeNow.mp3") 
                sxeasy_play(working_directory + "\Static.mp3")
                room = nextlevel
            }
            if select = 1 and level = 1 room = rmControls //sxeasy_play(working_directory+choose("\Knock.mp3",       "\InnerAnimal.mp3",       "\Hotline.mp3",       "\NearDark.mp3",       "\Crystals.mp3")) room      =      rmChapter
            if select = 1 and level = 0 room = rmLevelSelect
            if select = 3 room = rmBandCredits
        }
    }
}

d3d_set_projection_ortho(0, 0, view_wview[0], view_hview[0], 0)
    /*
    draw_set_color(c_black)
    draw_rectangle(-1, -1, room_width + 1, 15, 0)
    draw_rectangle(-1, room_height + 1, room_width + 1, room_height - 15, 0)
    */
draw_set_color(c_white)
draw_set_font(fntDate)

draw_set_blend_mode(bm_subtract)
my_y = random(32)
draw_sprite_tiled(sprScanlines, 0, 0, my_y)
/*
draw_set_blend_mode(bm_subtract)
draw_circle_color(view_wview[0] / 2, view_hview[0] / 2, 240 + random(24), c_black, merge_color(c_orange, c_aqua, 0.25 + random(0.25)), 0)
draw_set_blend_mode(bm_normal)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if fade=1 or wait&gt;0 exit
wait=3
repeats=0
if level=0 {
if select&gt;0 select-=1 else select=3
}
if level=1 {
if select&gt;0 select-=1 else select=4
}
if level=2 {
if select&gt;0 select-=1 else select=1
}
if level=4 {
if select&gt;0 select-=1 else select=3
if select=1 and global.surfaces=1 select=0
}
sound_play(sndNav)</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if fade=1 or wait&gt;0 exit
wait=3
repeats=0
if level=0 {
if select&lt;3 select+=1 else select=0
}
if level=1 {
if select&lt;4 select+=1 else select=0
}
if level=2 {
if select&lt;1 select+=1 else select=0
}
if level=4 {
if select&lt;3 select+=1 else select=0
if select=1 and global.surfaces=1 select=2
}
sound_play(sndNav)</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if level=3 {
if fade=1 or wait&gt;0 exit
wait=3
if select=0 select=1 else select=0
}
sound_play(sndNav)</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if level=3 {
if fade=1 or wait&gt;0 exit
wait=3
if select=0 select=1 else select=0
}
sound_play(sndNav)</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.surfaces=!global.surfaces</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keypress,ord('S'))
sound_play(sndNav)</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keypress,ord('D'))
sound_play(sndNav)</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keypress,ord('W'))
sound_play(sndNav)</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keypress,ord('A'))
sound_play(sndNav)</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if fade=1 exit
if level=0 {
file_delete(working_directory+"\skip") 
fade=1
select=3
}
if level=1 {
select=0
alt[0]="START GAME"
alt[1]="CONTINUE"
i=0 repeat (20) {if global.levels[i]=1 i+=1}
if i=20 alt[1]="CHAPTERS"
i=0
alt[2]="OPTIONS"
alt[3]="EXIT GAME"
level=0
}

if level=2 or level=3 {
alt[0]="360 PAD "
if global.xbox=1 alt[0]+="ON" else alt[0]+="OFF"
alt[1]="CONTROLS"
alt[2]="VOLUME"
alt[3]="ADVANCED"
alt[4]="BACK"
select=0
level=1
}

if level=4 {
alt[0]="360 PAD "
if global.xbox=1 alt[0]+="ON" else alt[0]+="OFF"
alt[1]="CONTROLS"
alt[2]="VOLUME"
alt[3]="ADVANCED"
alt[4]="BACK"
select=0
level=1
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sound_play(sndEnter)
if level = 0 {
    if select = 0 {
        {
            select = 0 //level = 1 
            fade = 1
            scrInitScore()
        }
    }
    if select = 1 {
        /*global.sequence = rmChapter
        global.level = rmEurogamer
        global.pretitle = "Special Chapter"
        global.title = "EXPOSED"
        global.sequence = rmEurogamer*/
        //fade = 1
        //scrInitScore()
        fade = 1
        scrInitScore()
    }
    if select = 2 {
            level = 1
            select = 0
            alt[0] = "360 GAMEPAD "
            if global.xbox = 1 alt[0] += "ON"
            else alt[0] += "OFF"
            alt[1] = "CONTROLS"
            alt[2] = "VOLUME"
            alt[3] = "ADVANCED"
                //alt[3] = "AlienWare "
                //if global.alienware = 1 alt[3] += "ON" else alt[3] += "OFF"
            alt[4] = "BACK"
                //fade = 1
                //scrInitScore()
                /*if global.controller = 0 {
                    dllinit()
                    global.controller = 1
                    alt[1] = "PAD ON"
                }
                else {
                    dllfree()
                    global.controller = 0
                    alt[1] = "PAD OFF"
                }*/
            exit
        }
        //if select = 2 {fade = 1}
    if select = 3 {
        fade = 1 file_delete(working_directory + "\skip")
    }
}

if level = 1 {
    if select = 0 {
        if global.xbox = 1 {
            global.xbox = 0
            alt[0] = "360 GAMEPAD "
            if global.xbox = 1 alt[0] += "ON"
            else alt[0] += "OFF"
            dllfree()
            if file_exists(working_directory + "\xbox") file_delete(working_directory + "\xbox")
        } else {
            alt[0] = "YES"
            alt[1] = "NO"
            level = 3
            select = 1
            exit
        }
    }
    if select = 1 {
        scrInitScore()
        fade = 1
    }
    if select = 2 {
            level = 2
            select = 0
            alt[0] = "MUSIC " + string(round(global.mvol * 100)) + "%"
            alt[1] = "BACK"
            exit
        }
        /*if select = 3 {
            global.alienware = !global.alienware
            alt[3] = "AlienWare "
            if global.alienware = 1 {alt[3] += "ON" scrAlienWareInit() scrAlienWarePink() file = file_text_open_write(working_directory+"\alienware") 
            file_text_close(file)} else {alt[3] += "OFF" scrAlienWareFree() if file_exists(working_directory+"\alienware") file_delete(working_directory+"\alienware")
            }
        }*/

    if select = 3 {
        level = 4
        select = 0
        alt[0] = "SURFACES "
        if global.surfaces = 1 alt[0] += "ON"
        else alt[0] += "OFF"
        alt[1] = "clear blood "
        if global.blood = 0 alt[1] += "on"
        else alt[1] += "off"
        alt[2] = "AlienWare "
        if global.alienware = 1 alt[2] += "ON"
        else alt[2] += "OFF"
        alt[3] = "BACK"
        exit
    }

    if select = 4 {
        select = 0
        alt[0] = "START GAME"
        alt[1] = "CONTINUE"
        i = 0 repeat(20) {
            if global.levels[i] = 1 i += 1
        }
        if i = 20 alt[1] = "SCENES"
        i = 0
        alt[2] = "OPTIONS"
        alt[3] = "EXIT GAME"
        level = 0
        exit
    }
}

if level = 2 {
    if select = 1 {
        scrSaveVol()
        level = 1
        select = 0
        alt[0] = "360 GAMEPAD "
        if global.xbox = 1 alt[0] += "ON"
        else alt[0] += "OFF"
        alt[1] = "CONTROLS"
        alt[2] = "VOLUME"
        alt[3] = "ADVANCED"
        alt[4] = "BACK"
        exit
    }
}

if level = 3 {
    if select = 0 global.xbox = 1
    if select = 1 global.xbox = 0
    alt[0] = "360 GAMEPAD "
    if global.xbox = 1 {
        alt[0] += "ON"
        dllinit() file = file_text_open_write(working_directory + "\xbox") file_text_close(file)
    } else {
        alt[0] += "OFF"
        dllfree() if file_exists(working_directory + "\xbox") file_delete(working_directory + "\xbox")
    }
    alt[1] = "CONTROLS"
    alt[2] = "VOLUME"
    alt[3] = "ADVANCED"
    alt[4] = "BACK"
    level = 1
    select = 0
}


if level = 4 {
    if select = 0 {
        global.surfaces = !global.surfaces
        if global.surfaces = 1 {
            global.blood = 1
            if file_exists(working_directory + "\surfaces") file_delete(working_directory + "\surfaces")
            if file_exists(working_directory + "\blood") file_delete(working_directory + "\blood")
        } else {
            file = file_text_open_write(working_directory + "\surfaces") file_text_close(file)
            file = file_text_open_write(working_directory + "\blood") file_text_close(file)
        }
    }

    if select = 1 {
        global.blood = !global.blood
        if global.blood = 1 {
            if file_exists(working_directory + "\blood") file_delete(working_directory + "\blood")
        } else {
            file = file_text_open_write(working_directory + "\blood") file_text_close(file)
        }
    }
    if select = 2 global.alienware = !global.alienware
    alt[0] = "SURFACES "
    if global.surfaces = 1 alt[0] += "ON"
    else alt[0] += "OFF"
    alt[1] = "clear blood "
    if global.blood = 0 alt[1] += "on"
    else alt[1] += "off"
    alt[2] = "AlienWare "
    if global.alienware = 1 alt[2] += "ON"
    else alt[2] += "OFF"
    alt[3] = "BACK"
    if select = 3 {
        level = 1
        select = 0
        alt[0] = "360 GAMEPAD "
        if global.xbox = 1 alt[0] += "ON"
        else alt[0] += "OFF"
        alt[1] = "CONTROLS"
        alt[2] = "VOLUME"
        alt[3] = "ADVANCED"
        alt[4] = "BACK"
        exit
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
